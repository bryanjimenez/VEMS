/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['assets/js/customizer.js']) {
  _$jscoverage['assets/js/customizer.js'] = [];
  _$jscoverage['assets/js/customizer.js'][1] = 0;
  _$jscoverage['assets/js/customizer.js'][2] = 0;
  _$jscoverage['assets/js/customizer.js'][4] = 0;
  _$jscoverage['assets/js/customizer.js'][5] = 0;
  _$jscoverage['assets/js/customizer.js'][12] = 0;
  _$jscoverage['assets/js/customizer.js'][15] = 0;
  _$jscoverage['assets/js/customizer.js'][16] = 0;
  _$jscoverage['assets/js/customizer.js'][21] = 0;
  _$jscoverage['assets/js/customizer.js'][22] = 0;
  _$jscoverage['assets/js/customizer.js'][24] = 0;
  _$jscoverage['assets/js/customizer.js'][28] = 0;
  _$jscoverage['assets/js/customizer.js'][29] = 0;
  _$jscoverage['assets/js/customizer.js'][30] = 0;
  _$jscoverage['assets/js/customizer.js'][31] = 0;
  _$jscoverage['assets/js/customizer.js'][34] = 0;
  _$jscoverage['assets/js/customizer.js'][35] = 0;
  _$jscoverage['assets/js/customizer.js'][44] = 0;
  _$jscoverage['assets/js/customizer.js'][51] = 0;
  _$jscoverage['assets/js/customizer.js'][54] = 0;
  _$jscoverage['assets/js/customizer.js'][58] = 0;
  _$jscoverage['assets/js/customizer.js'][59] = 0;
  _$jscoverage['assets/js/customizer.js'][61] = 0;
  _$jscoverage['assets/js/customizer.js'][63] = 0;
  _$jscoverage['assets/js/customizer.js'][66] = 0;
  _$jscoverage['assets/js/customizer.js'][68] = 0;
  _$jscoverage['assets/js/customizer.js'][69] = 0;
  _$jscoverage['assets/js/customizer.js'][72] = 0;
  _$jscoverage['assets/js/customizer.js'][74] = 0;
  _$jscoverage['assets/js/customizer.js'][77] = 0;
  _$jscoverage['assets/js/customizer.js'][78] = 0;
  _$jscoverage['assets/js/customizer.js'][80] = 0;
  _$jscoverage['assets/js/customizer.js'][82] = 0;
  _$jscoverage['assets/js/customizer.js'][88] = 0;
  _$jscoverage['assets/js/customizer.js'][89] = 0;
  _$jscoverage['assets/js/customizer.js'][90] = 0;
  _$jscoverage['assets/js/customizer.js'][91] = 0;
  _$jscoverage['assets/js/customizer.js'][94] = 0;
  _$jscoverage['assets/js/customizer.js'][95] = 0;
  _$jscoverage['assets/js/customizer.js'][96] = 0;
  _$jscoverage['assets/js/customizer.js'][99] = 0;
  _$jscoverage['assets/js/customizer.js'][100] = 0;
  _$jscoverage['assets/js/customizer.js'][101] = 0;
  _$jscoverage['assets/js/customizer.js'][106] = 0;
  _$jscoverage['assets/js/customizer.js'][110] = 0;
  _$jscoverage['assets/js/customizer.js'][111] = 0;
  _$jscoverage['assets/js/customizer.js'][113] = 0;
  _$jscoverage['assets/js/customizer.js'][115] = 0;
  _$jscoverage['assets/js/customizer.js'][116] = 0;
  _$jscoverage['assets/js/customizer.js'][117] = 0;
  _$jscoverage['assets/js/customizer.js'][118] = 0;
  _$jscoverage['assets/js/customizer.js'][122] = 0;
  _$jscoverage['assets/js/customizer.js'][123] = 0;
  _$jscoverage['assets/js/customizer.js'][124] = 0;
  _$jscoverage['assets/js/customizer.js'][125] = 0;
  _$jscoverage['assets/js/customizer.js'][129] = 0;
  _$jscoverage['assets/js/customizer.js'][130] = 0;
  _$jscoverage['assets/js/customizer.js'][131] = 0;
  _$jscoverage['assets/js/customizer.js'][132] = 0;
  _$jscoverage['assets/js/customizer.js'][136] = 0;
  _$jscoverage['assets/js/customizer.js'][138] = 0;
  _$jscoverage['assets/js/customizer.js'][141] = 0;
  _$jscoverage['assets/js/customizer.js'][142] = 0;
  _$jscoverage['assets/js/customizer.js'][144] = 0;
  _$jscoverage['assets/js/customizer.js'][145] = 0;
  _$jscoverage['assets/js/customizer.js'][148] = 0;
  _$jscoverage['assets/js/customizer.js'][151] = 0;
  _$jscoverage['assets/js/customizer.js'][152] = 0;
  _$jscoverage['assets/js/customizer.js'][153] = 0;
  _$jscoverage['assets/js/customizer.js'][154] = 0;
  _$jscoverage['assets/js/customizer.js'][158] = 0;
  _$jscoverage['assets/js/customizer.js'][159] = 0;
  _$jscoverage['assets/js/customizer.js'][161] = 0;
  _$jscoverage['assets/js/customizer.js'][163] = 0;
  _$jscoverage['assets/js/customizer.js'][164] = 0;
  _$jscoverage['assets/js/customizer.js'][165] = 0;
  _$jscoverage['assets/js/customizer.js'][167] = 0;
  _$jscoverage['assets/js/customizer.js'][169] = 0;
  _$jscoverage['assets/js/customizer.js'][172] = 0;
  _$jscoverage['assets/js/customizer.js'][173] = 0;
  _$jscoverage['assets/js/customizer.js'][174] = 0;
  _$jscoverage['assets/js/customizer.js'][175] = 0;
  _$jscoverage['assets/js/customizer.js'][176] = 0;
  _$jscoverage['assets/js/customizer.js'][177] = 0;
  _$jscoverage['assets/js/customizer.js'][178] = 0;
  _$jscoverage['assets/js/customizer.js'][182] = 0;
  _$jscoverage['assets/js/customizer.js'][184] = 0;
  _$jscoverage['assets/js/customizer.js'][185] = 0;
  _$jscoverage['assets/js/customizer.js'][190] = 0;
  _$jscoverage['assets/js/customizer.js'][191] = 0;
  _$jscoverage['assets/js/customizer.js'][193] = 0;
  _$jscoverage['assets/js/customizer.js'][199] = 0;
  _$jscoverage['assets/js/customizer.js'][202] = 0;
  _$jscoverage['assets/js/customizer.js'][205] = 0;
  _$jscoverage['assets/js/customizer.js'][206] = 0;
  _$jscoverage['assets/js/customizer.js'][207] = 0;
  _$jscoverage['assets/js/customizer.js'][209] = 0;
  _$jscoverage['assets/js/customizer.js'][210] = 0;
  _$jscoverage['assets/js/customizer.js'][214] = 0;
  _$jscoverage['assets/js/customizer.js'][220] = 0;
  _$jscoverage['assets/js/customizer.js'][221] = 0;
  _$jscoverage['assets/js/customizer.js'][222] = 0;
  _$jscoverage['assets/js/customizer.js'][224] = 0;
  _$jscoverage['assets/js/customizer.js'][225] = 0;
  _$jscoverage['assets/js/customizer.js'][226] = 0;
  _$jscoverage['assets/js/customizer.js'][229] = 0;
  _$jscoverage['assets/js/customizer.js'][230] = 0;
  _$jscoverage['assets/js/customizer.js'][231] = 0;
  _$jscoverage['assets/js/customizer.js'][234] = 0;
  _$jscoverage['assets/js/customizer.js'][235] = 0;
  _$jscoverage['assets/js/customizer.js'][236] = 0;
  _$jscoverage['assets/js/customizer.js'][239] = 0;
  _$jscoverage['assets/js/customizer.js'][240] = 0;
  _$jscoverage['assets/js/customizer.js'][241] = 0;
  _$jscoverage['assets/js/customizer.js'][242] = 0;
  _$jscoverage['assets/js/customizer.js'][243] = 0;
  _$jscoverage['assets/js/customizer.js'][244] = 0;
  _$jscoverage['assets/js/customizer.js'][245] = 0;
  _$jscoverage['assets/js/customizer.js'][246] = 0;
  _$jscoverage['assets/js/customizer.js'][250] = 0;
  _$jscoverage['assets/js/customizer.js'][251] = 0;
  _$jscoverage['assets/js/customizer.js'][252] = 0;
  _$jscoverage['assets/js/customizer.js'][253] = 0;
  _$jscoverage['assets/js/customizer.js'][254] = 0;
  _$jscoverage['assets/js/customizer.js'][255] = 0;
  _$jscoverage['assets/js/customizer.js'][256] = 0;
  _$jscoverage['assets/js/customizer.js'][257] = 0;
  _$jscoverage['assets/js/customizer.js'][261] = 0;
  _$jscoverage['assets/js/customizer.js'][262] = 0;
  _$jscoverage['assets/js/customizer.js'][264] = 0;
  _$jscoverage['assets/js/customizer.js'][265] = 0;
  _$jscoverage['assets/js/customizer.js'][267] = 0;
  _$jscoverage['assets/js/customizer.js'][269] = 0;
  _$jscoverage['assets/js/customizer.js'][270] = 0;
  _$jscoverage['assets/js/customizer.js'][271] = 0;
  _$jscoverage['assets/js/customizer.js'][272] = 0;
  _$jscoverage['assets/js/customizer.js'][277] = 0;
  _$jscoverage['assets/js/customizer.js'][278] = 0;
  _$jscoverage['assets/js/customizer.js'][282] = 0;
  _$jscoverage['assets/js/customizer.js'][283] = 0;
  _$jscoverage['assets/js/customizer.js'][285] = 0;
  _$jscoverage['assets/js/customizer.js'][289] = 0;
}
_$jscoverage['assets/js/customizer.js'].source = ["window<span class=\"k\">.</span>onload <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"c\">// wait for load in a dumb way because B-0</span>","  <span class=\"k\">var</span> cw <span class=\"k\">=</span> <span class=\"s\">'/*!</span><span class=\"t\">\\n</span><span class=\"s\"> * Bootstrap v3.0.0</span><span class=\"t\">\\n</span><span class=\"s\"> *</span><span class=\"t\">\\n</span><span class=\"s\"> * Copyright 2013 Twitter, Inc</span><span class=\"t\">\\n</span><span class=\"s\"> * Licensed under the Apache License v2.0</span><span class=\"t\">\\n</span><span class=\"s\"> * http://www.apache.org/licenses/LICENSE-2.0</span><span class=\"t\">\\n</span><span class=\"s\"> *</span><span class=\"t\">\\n</span><span class=\"s\"> * Designed and built with all the love in the world @twitter by @mdo and @fat.</span><span class=\"t\">\\n</span><span class=\"s\"> */</span><span class=\"t\">\\n\\n</span><span class=\"s\">'</span>","","  <span class=\"k\">function</span> showError<span class=\"k\">(</span>msg<span class=\"k\">,</span> err<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">(</span><span class=\"s\">'&lt;div id=\"bsCustomizerAlert\" class=\"bs-customizer-alert\"&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">        &lt;div class=\"container\"&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">          &lt;a href=\"#bsCustomizerAlert\" data-dismiss=\"alert\" class=\"close pull-right\"&gt;&amp;times;&lt;/a&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">          &lt;p class=\"bs-customizer-alert-text\"&gt;&lt;span class=\"glyphicon glyphicon-warning-sign\"&gt;&lt;/span&gt;'</span> <span class=\"k\">+</span> msg <span class=\"k\">+</span> <span class=\"s\">'&lt;/p&gt;'</span> <span class=\"k\">+</span>","          <span class=\"k\">(</span>err<span class=\"k\">.</span>extract <span class=\"k\">?</span> <span class=\"s\">'&lt;pre class=\"bs-customizer-alert-extract\"&gt;'</span> <span class=\"k\">+</span> err<span class=\"k\">.</span>extract<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'&lt;/pre&gt;'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'</span><span class=\"t\">\\</span>","<span class=\"s\">        &lt;/div&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">      &lt;/div&gt;'</span><span class=\"k\">).</span>appendTo<span class=\"k\">(</span><span class=\"s\">'body'</span><span class=\"k\">).</span>alert<span class=\"k\">()</span>","    <span class=\"k\">throw</span> err","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> showCallout<span class=\"k\">(</span>msg<span class=\"k\">,</span> showUpTop<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> callout <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'&lt;div class=\"bs-callout bs-callout-danger\"&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">       &lt;h4&gt;Attention!&lt;/h4&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">      &lt;p&gt;'</span> <span class=\"k\">+</span> msg <span class=\"k\">+</span> <span class=\"s\">'&lt;/p&gt;</span><span class=\"t\">\\</span>","<span class=\"s\">    &lt;/div&gt;'</span><span class=\"k\">)</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>showUpTop<span class=\"k\">)</span> <span class=\"k\">{</span>","      callout<span class=\"k\">.</span>appendTo<span class=\"k\">(</span><span class=\"s\">'.bs-docs-container'</span><span class=\"k\">)</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","      callout<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span><span class=\"s\">'.bs-customize-download'</span><span class=\"k\">)</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> getQueryParam<span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","    key <span class=\"k\">=</span> key<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[*+?^$.\\[\\]{}()|\\\\\\/]/g</span><span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">$&amp;\"</span><span class=\"k\">);</span> <span class=\"c\">// escape RegEx meta chars</span>","    <span class=\"k\">var</span> match <span class=\"k\">=</span> location<span class=\"k\">.</span>search<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"[?&amp;]\"</span><span class=\"k\">+</span>key<span class=\"k\">+</span><span class=\"s\">\"=([^&amp;]+)(&amp;|$)\"</span><span class=\"k\">));</span>","    <span class=\"k\">return</span> match <span class=\"k\">&amp;&amp;</span> decodeURIComponent<span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span><span class=\"s\">/\\+/g</span><span class=\"k\">,</span> <span class=\"s\">\" \"</span><span class=\"k\">));</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> createGist<span class=\"k\">(</span>configData<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">{</span>","      <span class=\"s\">\"description\"</span><span class=\"k\">:</span> <span class=\"s\">\"Bootstrap Customizer Config\"</span><span class=\"k\">,</span>","      <span class=\"s\">\"public\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","      <span class=\"s\">\"files\"</span><span class=\"k\">:</span> <span class=\"k\">{</span>","        <span class=\"s\">\"config.json\"</span><span class=\"k\">:</span> <span class=\"k\">{</span>","          <span class=\"s\">\"content\"</span><span class=\"k\">:</span> JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>configData<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"s\">2</span><span class=\"k\">)</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    $<span class=\"k\">.</span>ajax<span class=\"k\">(</span><span class=\"k\">{</span>","      url<span class=\"k\">:</span> <span class=\"s\">'https://api.github.com/gists'</span><span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'POST'</span><span class=\"k\">,</span>","      dataType<span class=\"k\">:</span> <span class=\"s\">'json'</span><span class=\"k\">,</span>","      data<span class=\"k\">:</span> JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>data<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">.</span>success<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>result<span class=\"k\">)</span> <span class=\"k\">{</span>","      history<span class=\"k\">.</span>replaceState<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> document<span class=\"k\">.</span>title<span class=\"k\">,</span> window<span class=\"k\">.</span>location<span class=\"k\">.</span>origin <span class=\"k\">+</span> window<span class=\"k\">.</span>location<span class=\"k\">.</span>pathname <span class=\"k\">+</span> <span class=\"s\">'?id='</span> <span class=\"k\">+</span> result<span class=\"k\">.</span>id<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">.</span>error<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","      showError<span class=\"k\">(</span><span class=\"s\">'&lt;strong&gt;Ruh roh!&lt;/strong&gt; Could not save gist file, configuration not saved.'</span><span class=\"k\">,</span> err<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> getCustomizerData<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> vars <span class=\"k\">=</span> <span class=\"k\">{}</span>","","    $<span class=\"k\">(</span><span class=\"s\">'#less-variables-section input'</span><span class=\"k\">)</span>","        <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","          $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>val<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>vars<span class=\"k\">[</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>prev<span class=\"k\">().</span>text<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>val<span class=\"k\">())</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","","    <span class=\"k\">var</span> data <span class=\"k\">=</span> <span class=\"k\">{</span>","      vars<span class=\"k\">:</span> vars<span class=\"k\">,</span>","      css<span class=\"k\">:</span> $<span class=\"k\">(</span><span class=\"s\">'#less-section input:checked'</span><span class=\"k\">)</span>  <span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">}</span><span class=\"k\">).</span>toArray<span class=\"k\">(),</span>","      js<span class=\"k\">:</span>  $<span class=\"k\">(</span><span class=\"s\">'#plugin-section input:checked'</span><span class=\"k\">).</span>map<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">}</span><span class=\"k\">).</span>toArray<span class=\"k\">()</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>data<span class=\"k\">.</span>vars<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>data<span class=\"k\">.</span>css<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>data<span class=\"k\">.</span>js<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span>","","    <span class=\"k\">return</span> data","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> parseUrl<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> id <span class=\"k\">=</span> getQueryParam<span class=\"k\">(</span><span class=\"s\">'id'</span><span class=\"k\">)</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>id<span class=\"k\">)</span> <span class=\"k\">return</span>","","    $<span class=\"k\">.</span>ajax<span class=\"k\">(</span><span class=\"k\">{</span>","      url<span class=\"k\">:</span> <span class=\"s\">'https://api.github.com/gists/'</span> <span class=\"k\">+</span> id<span class=\"k\">,</span>","      type<span class=\"k\">:</span> <span class=\"s\">'GET'</span><span class=\"k\">,</span>","      dataType<span class=\"k\">:</span> <span class=\"s\">'json'</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">.</span>success<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>result<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> data <span class=\"k\">=</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span>result<span class=\"k\">.</span>files<span class=\"k\">[</span><span class=\"s\">'config.json'</span><span class=\"k\">].</span>content<span class=\"k\">)</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">.</span>js<span class=\"k\">)</span> <span class=\"k\">{</span>","        $<span class=\"k\">(</span><span class=\"s\">'#plugin-section input'</span><span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","          $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>prop<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">~</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">,</span> data<span class=\"k\">.</span>js<span class=\"k\">))</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">.</span>css<span class=\"k\">)</span> <span class=\"k\">{</span>","        $<span class=\"k\">(</span><span class=\"s\">'#less-section input'</span><span class=\"k\">).</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","          $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>prop<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">~</span>$<span class=\"k\">.</span>inArray<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">,</span> data<span class=\"k\">.</span>css<span class=\"k\">))</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","      <span class=\"k\">}</span>","      <span class=\"k\">if</span> <span class=\"k\">(</span>data<span class=\"k\">.</span>vars<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> data<span class=\"k\">.</span>vars<span class=\"k\">)</span> <span class=\"k\">{</span>","          $<span class=\"k\">(</span><span class=\"s\">'input[data-var=\"'</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">'\"]'</span><span class=\"k\">).</span>val<span class=\"k\">(</span>data<span class=\"k\">.</span>vars<span class=\"k\">[</span>i<span class=\"k\">])</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">.</span>error<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","      showError<span class=\"k\">(</span><span class=\"s\">'Error fetching bootstrap config file'</span><span class=\"k\">,</span> err<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> generateZip<span class=\"k\">(</span>css<span class=\"k\">,</span> js<span class=\"k\">,</span> fonts<span class=\"k\">,</span> complete<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>css <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>js<span class=\"k\">)</span> <span class=\"k\">return</span> showError<span class=\"k\">(</span><span class=\"s\">'&lt;strong&gt;Ruh roh!&lt;/strong&gt; No Bootstrap files selected.'</span><span class=\"k\">,</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span><span class=\"s\">'no Bootstrap'</span><span class=\"k\">))</span>","","    <span class=\"k\">var</span> zip <span class=\"k\">=</span> <span class=\"k\">new</span> JSZip<span class=\"k\">()</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>css<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> cssFolder <span class=\"k\">=</span> zip<span class=\"k\">.</span>folder<span class=\"k\">(</span><span class=\"s\">'css'</span><span class=\"k\">)</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> fileName <span class=\"k\">in</span> css<span class=\"k\">)</span> <span class=\"k\">{</span>","        cssFolder<span class=\"k\">.</span>file<span class=\"k\">(</span>fileName<span class=\"k\">,</span> css<span class=\"k\">[</span>fileName<span class=\"k\">])</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>js<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> jsFolder <span class=\"k\">=</span> zip<span class=\"k\">.</span>folder<span class=\"k\">(</span><span class=\"s\">'js'</span><span class=\"k\">)</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> fileName <span class=\"k\">in</span> js<span class=\"k\">)</span> <span class=\"k\">{</span>","        jsFolder<span class=\"k\">.</span>file<span class=\"k\">(</span>fileName<span class=\"k\">,</span> js<span class=\"k\">[</span>fileName<span class=\"k\">])</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span>fonts<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> fontsFolder <span class=\"k\">=</span> zip<span class=\"k\">.</span>folder<span class=\"k\">(</span><span class=\"s\">'fonts'</span><span class=\"k\">)</span>","      <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> fileName <span class=\"k\">in</span> fonts<span class=\"k\">)</span> <span class=\"k\">{</span>","        fontsFolder<span class=\"k\">.</span>file<span class=\"k\">(</span>fileName<span class=\"k\">,</span> fonts<span class=\"k\">[</span>fileName<span class=\"k\">])</span>","      <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">var</span> content <span class=\"k\">=</span> zip<span class=\"k\">.</span>generate<span class=\"k\">(</span><span class=\"k\">{</span>type<span class=\"k\">:</span><span class=\"s\">\"blob\"</span><span class=\"k\">}</span><span class=\"k\">)</span>","","    complete<span class=\"k\">(</span>content<span class=\"k\">)</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> generateCustomCSS<span class=\"k\">(</span>vars<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"s\">''</span>","","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> vars<span class=\"k\">)</span> <span class=\"k\">{</span>","      result <span class=\"k\">+=</span> key <span class=\"k\">+</span> <span class=\"s\">': '</span> <span class=\"k\">+</span> vars<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">';</span><span class=\"t\">\\n</span><span class=\"s\">'</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> result <span class=\"k\">+</span> <span class=\"s\">'</span><span class=\"t\">\\n\\n</span><span class=\"s\">'</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> generateFonts<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> glyphicons <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#less-section [value=\"glyphicons.less\"]:checked'</span><span class=\"k\">)</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>glyphicons<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> __fonts","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> generateCSS<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> $checked <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#less-section input:checked'</span><span class=\"k\">)</span>","","    <span class=\"k\">if</span> <span class=\"k\">(!</span>$checked<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">false</span>","","    <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">{}</span>","    <span class=\"k\">var</span> vars <span class=\"k\">=</span> <span class=\"k\">{}</span>","    <span class=\"k\">var</span> css <span class=\"k\">=</span> <span class=\"s\">''</span>","","    $<span class=\"k\">(</span><span class=\"s\">'#less-variables-section input'</span><span class=\"k\">)</span>","        <span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","          $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>val<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>vars<span class=\"k\">[</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>prev<span class=\"k\">().</span>text<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>val<span class=\"k\">())</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","","    css <span class=\"k\">+=</span> __less<span class=\"k\">[</span><span class=\"s\">'variables.less'</span><span class=\"k\">]</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>vars<span class=\"k\">)</span> css <span class=\"k\">+=</span> generateCustomCSS<span class=\"k\">(</span>vars<span class=\"k\">)</span>","    css <span class=\"k\">+=</span> __less<span class=\"k\">[</span><span class=\"s\">'mixins.less'</span><span class=\"k\">]</span>","    css <span class=\"k\">+=</span> __less<span class=\"k\">[</span><span class=\"s\">'normalize.less'</span><span class=\"k\">]</span>","    css <span class=\"k\">+=</span> __less<span class=\"k\">[</span><span class=\"s\">'scaffolding.less'</span><span class=\"k\">]</span>","    css <span class=\"k\">+=</span> $checked","      <span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> __less<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">)</span>","      <span class=\"k\">.</span>toArray<span class=\"k\">()</span>","      <span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">)</span>","","    css <span class=\"k\">=</span> css<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/@import[^\\n]*/gi</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"c\">//strip any imports</span>","","    <span class=\"k\">try</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> parser <span class=\"k\">=</span> <span class=\"k\">new</span> less<span class=\"k\">.</span>Parser<span class=\"k\">(</span><span class=\"k\">{</span>","          paths<span class=\"k\">:</span> <span class=\"k\">[</span><span class=\"s\">'variables.less'</span><span class=\"k\">,</span> <span class=\"s\">'mixins.less'</span><span class=\"k\">]</span>","        <span class=\"k\">,</span> optimization<span class=\"k\">:</span> <span class=\"s\">0</span>","        <span class=\"k\">,</span> filename<span class=\"k\">:</span> <span class=\"s\">'bootstrap.css'</span>","      <span class=\"k\">}</span><span class=\"k\">).</span>parse<span class=\"k\">(</span>css<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>err<span class=\"k\">,</span> tree<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","          <span class=\"k\">return</span> showError<span class=\"k\">(</span><span class=\"s\">'&lt;strong&gt;Ruh roh!&lt;/strong&gt; Could not parse less files.'</span><span class=\"k\">,</span> err<span class=\"k\">)</span>","        <span class=\"k\">}</span>","        result <span class=\"k\">=</span> <span class=\"k\">{</span>","          <span class=\"s\">'bootstrap.css'</span>     <span class=\"k\">:</span> cw <span class=\"k\">+</span> tree<span class=\"k\">.</span>toCSS<span class=\"k\">(),</span>","          <span class=\"s\">'bootstrap.min.css'</span> <span class=\"k\">:</span> cw <span class=\"k\">+</span> tree<span class=\"k\">.</span>toCSS<span class=\"k\">(</span><span class=\"k\">{</span> compress<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span><span class=\"k\">)</span>","        <span class=\"k\">}</span>","      <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","      <span class=\"k\">return</span> showError<span class=\"k\">(</span><span class=\"s\">'&lt;strong&gt;Ruh roh!&lt;/strong&gt; Could not parse less files.'</span><span class=\"k\">,</span> err<span class=\"k\">)</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> result","  <span class=\"k\">}</span>","","  <span class=\"k\">function</span> generateJavascript<span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> $checked <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#plugin-section input:checked'</span><span class=\"k\">)</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>$checked<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">false</span>","","    <span class=\"k\">var</span> js <span class=\"k\">=</span> $checked","      <span class=\"k\">.</span>map<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> __js<span class=\"k\">[</span><span class=\"k\">this</span><span class=\"k\">.</span>value<span class=\"k\">]</span> <span class=\"k\">}</span><span class=\"k\">)</span>","      <span class=\"k\">.</span>toArray<span class=\"k\">()</span>","      <span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">)</span>","","    <span class=\"k\">return</span> <span class=\"k\">{</span>","      <span class=\"s\">'bootstrap.js'</span><span class=\"k\">:</span> js<span class=\"k\">,</span>","      <span class=\"s\">'bootstrap.min.js'</span><span class=\"k\">:</span> cw <span class=\"k\">+</span> uglify<span class=\"k\">(</span>js<span class=\"k\">)</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span>","","  <span class=\"k\">var</span> inputsComponent <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#less-section input'</span><span class=\"k\">)</span>","  <span class=\"k\">var</span> inputsPlugin    <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#plugin-section input'</span><span class=\"k\">)</span>","  <span class=\"k\">var</span> inputsVariables <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#less-variables-section input'</span><span class=\"k\">)</span>","","  $<span class=\"k\">(</span><span class=\"s\">'#less-section .toggle'</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","    e<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span>","    inputsComponent<span class=\"k\">.</span>prop<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">!</span>inputsComponent<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">))</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  $<span class=\"k\">(</span><span class=\"s\">'#plugin-section .toggle'</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","    e<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span>","    inputsPlugin<span class=\"k\">.</span>prop<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">!</span>inputsPlugin<span class=\"k\">.</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">))</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  $<span class=\"k\">(</span><span class=\"s\">'#less-variables-section .toggle'</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","    e<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span>","    inputsVariables<span class=\"k\">.</span>val<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">)</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  $<span class=\"k\">(</span><span class=\"s\">'[data-dependencies]'</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">))</span> <span class=\"k\">return</span>","    <span class=\"k\">var</span> dependencies <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'data-dependencies'</span><span class=\"k\">)</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>dependencies<span class=\"k\">)</span> <span class=\"k\">return</span>","    dependencies <span class=\"k\">=</span> dependencies<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> dependencies<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> dependency <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'[value=\"'</span> <span class=\"k\">+</span> dependencies<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'\"]'</span><span class=\"k\">)</span>","      dependency <span class=\"k\">&amp;&amp;</span> dependency<span class=\"k\">.</span>prop<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  $<span class=\"k\">(</span><span class=\"s\">'[data-dependents]'</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span>$<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">).</span>is<span class=\"k\">(</span><span class=\"s\">':checked'</span><span class=\"k\">))</span> <span class=\"k\">return</span>","    <span class=\"k\">var</span> dependents <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'data-dependents'</span><span class=\"k\">)</span>","    <span class=\"k\">if</span> <span class=\"k\">(!</span>dependents<span class=\"k\">)</span> <span class=\"k\">return</span>","    dependents <span class=\"k\">=</span> dependents<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">)</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> dependents<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","      <span class=\"k\">var</span> dependent <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'[value=\"'</span> <span class=\"k\">+</span> dependents<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'\"]'</span><span class=\"k\">)</span>","      dependent <span class=\"k\">&amp;&amp;</span> dependent<span class=\"k\">.</span>prop<span class=\"k\">(</span><span class=\"s\">'checked'</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">)</span>","    <span class=\"k\">}</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  <span class=\"k\">var</span> $compileBtn <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#btn-compile'</span><span class=\"k\">)</span>","  <span class=\"k\">var</span> $downloadBtn <span class=\"k\">=</span> $<span class=\"k\">(</span><span class=\"s\">'#btn-download'</span><span class=\"k\">)</span>","","  $compileBtn<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","    e<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span>","","    $compileBtn<span class=\"k\">.</span>attr<span class=\"k\">(</span><span class=\"s\">'disabled'</span><span class=\"k\">,</span> <span class=\"s\">'disabled'</span><span class=\"k\">)</span>","","    generateZip<span class=\"k\">(</span>generateCSS<span class=\"k\">(),</span> generateJavascript<span class=\"k\">(),</span> generateFonts<span class=\"k\">(),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>blob<span class=\"k\">)</span> <span class=\"k\">{</span>","      $compileBtn<span class=\"k\">.</span>removeAttr<span class=\"k\">(</span><span class=\"s\">'disabled'</span><span class=\"k\">)</span>","      saveAs<span class=\"k\">(</span>blob<span class=\"k\">,</span> <span class=\"s\">\"bootstrap.zip\"</span><span class=\"k\">)</span>","      createGist<span class=\"k\">(</span>getCustomizerData<span class=\"k\">())</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","  <span class=\"k\">}</span><span class=\"k\">)</span>","","  <span class=\"c\">// browser support alerts</span>","  <span class=\"k\">if</span> <span class=\"k\">(!</span>window<span class=\"k\">.</span>URL <span class=\"k\">&amp;&amp;</span> navigator<span class=\"k\">.</span>userAgent<span class=\"k\">.</span>toLowerCase<span class=\"k\">().</span>indexOf<span class=\"k\">(</span><span class=\"s\">'safari'</span><span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","    showCallout<span class=\"k\">(</span><span class=\"s\">\"Looks like you're using safari, which sadly doesn't have the best support</span><span class=\"t\">\\</span>","<span class=\"s\">                 for HTML5 blobs. Because of this your file will be downloaded with the name &lt;code&gt;</span><span class=\"t\">\\\"</span><span class=\"s\">untitled</span><span class=\"t\">\\\"</span><span class=\"s\">&lt;/code&gt;.</span><span class=\"t\">\\</span>","<span class=\"s\">                 However, if you check your downloads folder, just rename this &lt;code&gt;</span><span class=\"t\">\\\"</span><span class=\"s\">untitled</span><span class=\"t\">\\\"</span><span class=\"s\">&lt;/code&gt; file</span><span class=\"t\">\\</span>","<span class=\"s\">                 to &lt;code&gt;</span><span class=\"t\">\\\"</span><span class=\"s\">bootstrap.zip</span><span class=\"t\">\\\"</span><span class=\"s\">&lt;/code&gt; and you should be good to go!\"</span><span class=\"k\">)</span>","  <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>window<span class=\"k\">.</span>URL <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>window<span class=\"k\">.</span>webkitURL<span class=\"k\">)</span> <span class=\"k\">{</span>","    $<span class=\"k\">(</span><span class=\"s\">'.bs-docs-section, .bs-sidebar'</span><span class=\"k\">).</span>css<span class=\"k\">(</span><span class=\"s\">'display'</span><span class=\"k\">,</span> <span class=\"s\">'none'</span><span class=\"k\">)</span>","","    showCallout<span class=\"k\">(</span><span class=\"s\">\"Looks like your current browser doesn't support the Bootstrap Customizer. Please take a second</span><span class=\"t\">\\</span>","<span class=\"s\">                to &lt;a href=</span><span class=\"t\">\\\"</span><span class=\"s\">https://www.google.com/intl/en/chrome/browser/</span><span class=\"t\">\\\"</span><span class=\"s\">&gt; upgrade to a more modern browser&lt;/a&gt;.\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","  <span class=\"k\">}</span>","","  parseUrl<span class=\"k\">()</span>","<span class=\"k\">}</span>"];
_$jscoverage['assets/js/customizer.js'][1]++;
window.onload = (function () {
  _$jscoverage['assets/js/customizer.js'][2]++;
  var cw = "/*!\n * Bootstrap v3.0.0\n *\n * Copyright 2013 Twitter, Inc\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Designed and built with all the love in the world @twitter by @mdo and @fat.\n */\n\n";
  _$jscoverage['assets/js/customizer.js'][4]++;
  function showError(msg, err) {
    _$jscoverage['assets/js/customizer.js'][5]++;
    $(("<div id=\"bsCustomizerAlert\" class=\"bs-customizer-alert\">        <div class=\"container\">          <a href=\"#bsCustomizerAlert\" data-dismiss=\"alert\" class=\"close pull-right\">&times;</a>          <p class=\"bs-customizer-alert-text\"><span class=\"glyphicon glyphicon-warning-sign\"></span>" + msg + "</p>" + (err.extract? ("<pre class=\"bs-customizer-alert-extract\">" + err.extract.join("\n") + "</pre>"): "") + "        </div>      </div>")).appendTo("body").alert();
    _$jscoverage['assets/js/customizer.js'][12]++;
    throw err;
}
  _$jscoverage['assets/js/customizer.js'][15]++;
  function showCallout(msg, showUpTop) {
    _$jscoverage['assets/js/customizer.js'][16]++;
    var callout = $(("<div class=\"bs-callout bs-callout-danger\">       <h4>Attention!</h4>      <p>" + msg + "</p>    </div>"));
    _$jscoverage['assets/js/customizer.js'][21]++;
    if (showUpTop) {
      _$jscoverage['assets/js/customizer.js'][22]++;
      callout.appendTo(".bs-docs-container");
    }
    else {
      _$jscoverage['assets/js/customizer.js'][24]++;
      callout.insertAfter(".bs-customize-download");
    }
}
  _$jscoverage['assets/js/customizer.js'][28]++;
  function getQueryParam(key) {
    _$jscoverage['assets/js/customizer.js'][29]++;
    key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&");
    _$jscoverage['assets/js/customizer.js'][30]++;
    var match = location.search.match(new RegExp(("[?&]" + key + "=([^&]+)(&|$)")));
    _$jscoverage['assets/js/customizer.js'][31]++;
    return (match && decodeURIComponent(match[1].replace(/\+/g, " ")));
}
  _$jscoverage['assets/js/customizer.js'][34]++;
  function createGist(configData) {
    _$jscoverage['assets/js/customizer.js'][35]++;
    var data = {"description": "Bootstrap Customizer Config", "public": true, "files": {"config.json": {"content": JSON.stringify(configData, null, 2)}}};
    _$jscoverage['assets/js/customizer.js'][44]++;
    $.ajax({url: "https://api.github.com/gists", type: "POST", dataType: "json", data: JSON.stringify(data)}).success((function (result) {
  _$jscoverage['assets/js/customizer.js'][51]++;
  history.replaceState(false, document.title, (window.location.origin + window.location.pathname + "?id=" + result.id));
})).error((function (err) {
  _$jscoverage['assets/js/customizer.js'][54]++;
  showError("<strong>Ruh roh!</strong> Could not save gist file, configuration not saved.", err);
}));
}
  _$jscoverage['assets/js/customizer.js'][58]++;
  function getCustomizerData() {
    _$jscoverage['assets/js/customizer.js'][59]++;
    var vars = {};
    _$jscoverage['assets/js/customizer.js'][61]++;
    $("#less-variables-section input").each((function () {
  _$jscoverage['assets/js/customizer.js'][63]++;
  ($(this).val() && (vars[$(this).prev().text()] = $(this).val()));
}));
    _$jscoverage['assets/js/customizer.js'][66]++;
    var data = {vars: vars, css: $("#less-section input:checked").map((function () {
  _$jscoverage['assets/js/customizer.js'][68]++;
  return this.value;
})).toArray(), js: $("#plugin-section input:checked").map((function () {
  _$jscoverage['assets/js/customizer.js'][69]++;
  return this.value;
})).toArray()};
    _$jscoverage['assets/js/customizer.js'][72]++;
    if (($.isEmptyObject(data.vars) && (! data.css.length) && (! data.js.length))) {
      _$jscoverage['assets/js/customizer.js'][72]++;
      return;
    }
    _$jscoverage['assets/js/customizer.js'][74]++;
    return data;
}
  _$jscoverage['assets/js/customizer.js'][77]++;
  function parseUrl() {
    _$jscoverage['assets/js/customizer.js'][78]++;
    var id = getQueryParam("id");
    _$jscoverage['assets/js/customizer.js'][80]++;
    if ((! id)) {
      _$jscoverage['assets/js/customizer.js'][80]++;
      return;
    }
    _$jscoverage['assets/js/customizer.js'][82]++;
    $.ajax({url: ("https://api.github.com/gists/" + id), type: "GET", dataType: "json"}).success((function (result) {
  _$jscoverage['assets/js/customizer.js'][88]++;
  var data = JSON.parse(result.files["config.json"].content);
  _$jscoverage['assets/js/customizer.js'][89]++;
  if (data.js) {
    _$jscoverage['assets/js/customizer.js'][90]++;
    $("#plugin-section input").each((function () {
  _$jscoverage['assets/js/customizer.js'][91]++;
  $(this).prop("checked", (~ $.inArray(this.value, data.js)));
}));
  }
  _$jscoverage['assets/js/customizer.js'][94]++;
  if (data.css) {
    _$jscoverage['assets/js/customizer.js'][95]++;
    $("#less-section input").each((function () {
  _$jscoverage['assets/js/customizer.js'][96]++;
  $(this).prop("checked", (~ $.inArray(this.value, data.css)));
}));
  }
  _$jscoverage['assets/js/customizer.js'][99]++;
  if (data.vars) {
    _$jscoverage['assets/js/customizer.js'][100]++;
    for (var i in data.vars) {
      _$jscoverage['assets/js/customizer.js'][101]++;
      $(("input[data-var=\"" + i + "\"]")).val(data.vars[i]);
}
  }
})).error((function (err) {
  _$jscoverage['assets/js/customizer.js'][106]++;
  showError("Error fetching bootstrap config file", err);
}));
}
  _$jscoverage['assets/js/customizer.js'][110]++;
  function generateZip(css, js, fonts, complete) {
    _$jscoverage['assets/js/customizer.js'][111]++;
    if (((! css) && (! js))) {
      _$jscoverage['assets/js/customizer.js'][111]++;
      return showError("<strong>Ruh roh!</strong> No Bootstrap files selected.", new Error("no Bootstrap"));
    }
    _$jscoverage['assets/js/customizer.js'][113]++;
    var zip = new JSZip();
    _$jscoverage['assets/js/customizer.js'][115]++;
    if (css) {
      _$jscoverage['assets/js/customizer.js'][116]++;
      var cssFolder = zip.folder("css");
      _$jscoverage['assets/js/customizer.js'][117]++;
      for (var fileName in css) {
        _$jscoverage['assets/js/customizer.js'][118]++;
        cssFolder.file(fileName, css[fileName]);
}
    }
    _$jscoverage['assets/js/customizer.js'][122]++;
    if (js) {
      _$jscoverage['assets/js/customizer.js'][123]++;
      var jsFolder = zip.folder("js");
      _$jscoverage['assets/js/customizer.js'][124]++;
      for (var fileName = fileName in js) {
        _$jscoverage['assets/js/customizer.js'][125]++;
        jsFolder.file(fileName, js[fileName]);
}
    }
    _$jscoverage['assets/js/customizer.js'][129]++;
    if (fonts) {
      _$jscoverage['assets/js/customizer.js'][130]++;
      var fontsFolder = zip.folder("fonts");
      _$jscoverage['assets/js/customizer.js'][131]++;
      for (var fileName = fileName in fonts) {
        _$jscoverage['assets/js/customizer.js'][132]++;
        fontsFolder.file(fileName, fonts[fileName]);
}
    }
    _$jscoverage['assets/js/customizer.js'][136]++;
    var content = zip.generate({type: "blob"});
    _$jscoverage['assets/js/customizer.js'][138]++;
    complete(content);
}
  _$jscoverage['assets/js/customizer.js'][141]++;
  function generateCustomCSS(vars) {
    _$jscoverage['assets/js/customizer.js'][142]++;
    var result = "";
    _$jscoverage['assets/js/customizer.js'][144]++;
    for (var key in vars) {
      _$jscoverage['assets/js/customizer.js'][145]++;
      result += (key + ": " + vars[key] + ";\n");
}
    _$jscoverage['assets/js/customizer.js'][148]++;
    return (result + "\n\n");
}
  _$jscoverage['assets/js/customizer.js'][151]++;
  function generateFonts() {
    _$jscoverage['assets/js/customizer.js'][152]++;
    var glyphicons = $("#less-section [value=\"glyphicons.less\"]:checked");
    _$jscoverage['assets/js/customizer.js'][153]++;
    if (glyphicons.length) {
      _$jscoverage['assets/js/customizer.js'][154]++;
      return __fonts;
    }
}
  _$jscoverage['assets/js/customizer.js'][158]++;
  function generateCSS() {
    _$jscoverage['assets/js/customizer.js'][159]++;
    var $checked = $("#less-section input:checked");
    _$jscoverage['assets/js/customizer.js'][161]++;
    if ((! $checked.length)) {
      _$jscoverage['assets/js/customizer.js'][161]++;
      return false;
    }
    _$jscoverage['assets/js/customizer.js'][163]++;
    var result = {};
    _$jscoverage['assets/js/customizer.js'][164]++;
    var vars = {};
    _$jscoverage['assets/js/customizer.js'][165]++;
    var css = "";
    _$jscoverage['assets/js/customizer.js'][167]++;
    $("#less-variables-section input").each((function () {
  _$jscoverage['assets/js/customizer.js'][169]++;
  ($(this).val() && (vars[$(this).prev().text()] = $(this).val()));
}));
    _$jscoverage['assets/js/customizer.js'][172]++;
    css += __less["variables.less"];
    _$jscoverage['assets/js/customizer.js'][173]++;
    if (vars) {
      _$jscoverage['assets/js/customizer.js'][173]++;
      css += generateCustomCSS(vars);
    }
    _$jscoverage['assets/js/customizer.js'][174]++;
    css += __less["mixins.less"];
    _$jscoverage['assets/js/customizer.js'][175]++;
    css += __less["normalize.less"];
    _$jscoverage['assets/js/customizer.js'][176]++;
    css += __less["scaffolding.less"];
    _$jscoverage['assets/js/customizer.js'][177]++;
    css += $checked.map((function () {
  _$jscoverage['assets/js/customizer.js'][178]++;
  return __less[this.value];
})).toArray().join("\n");
    _$jscoverage['assets/js/customizer.js'][182]++;
    css = css.replace(/@import[^\n]*/gi, "");
    _$jscoverage['assets/js/customizer.js'][184]++;
    try {
      _$jscoverage['assets/js/customizer.js'][185]++;
      var parser = new (less.Parser)({paths: ["variables.less", "mixins.less"], optimization: 0, filename: "bootstrap.css"}).parse(css, (function (err, tree) {
  _$jscoverage['assets/js/customizer.js'][190]++;
  if (err) {
    _$jscoverage['assets/js/customizer.js'][191]++;
    return showError("<strong>Ruh roh!</strong> Could not parse less files.", err);
  }
  _$jscoverage['assets/js/customizer.js'][193]++;
  result = {"bootstrap.css": (cw + tree.toCSS()), "bootstrap.min.css": (cw + tree.toCSS({compress: true}))};
}));
    }
    catch (err) {
      _$jscoverage['assets/js/customizer.js'][199]++;
      return showError("<strong>Ruh roh!</strong> Could not parse less files.", err);
    }
    _$jscoverage['assets/js/customizer.js'][202]++;
    return result;
}
  _$jscoverage['assets/js/customizer.js'][205]++;
  function generateJavascript() {
    _$jscoverage['assets/js/customizer.js'][206]++;
    var $checked = $("#plugin-section input:checked");
    _$jscoverage['assets/js/customizer.js'][207]++;
    if ((! $checked.length)) {
      _$jscoverage['assets/js/customizer.js'][207]++;
      return false;
    }
    _$jscoverage['assets/js/customizer.js'][209]++;
    var js = $checked.map((function () {
  _$jscoverage['assets/js/customizer.js'][210]++;
  return __js[this.value];
})).toArray().join("\n");
    _$jscoverage['assets/js/customizer.js'][214]++;
    return ({"bootstrap.js": js, "bootstrap.min.js": (cw + uglify(js))});
}
  _$jscoverage['assets/js/customizer.js'][220]++;
  var inputsComponent = $("#less-section input");
  _$jscoverage['assets/js/customizer.js'][221]++;
  var inputsPlugin = $("#plugin-section input");
  _$jscoverage['assets/js/customizer.js'][222]++;
  var inputsVariables = $("#less-variables-section input");
  _$jscoverage['assets/js/customizer.js'][224]++;
  $("#less-section .toggle").on("click", (function (e) {
  _$jscoverage['assets/js/customizer.js'][225]++;
  e.preventDefault();
  _$jscoverage['assets/js/customizer.js'][226]++;
  inputsComponent.prop("checked", (! inputsComponent.is(":checked")));
}));
  _$jscoverage['assets/js/customizer.js'][229]++;
  $("#plugin-section .toggle").on("click", (function (e) {
  _$jscoverage['assets/js/customizer.js'][230]++;
  e.preventDefault();
  _$jscoverage['assets/js/customizer.js'][231]++;
  inputsPlugin.prop("checked", (! inputsPlugin.is(":checked")));
}));
  _$jscoverage['assets/js/customizer.js'][234]++;
  $("#less-variables-section .toggle").on("click", (function (e) {
  _$jscoverage['assets/js/customizer.js'][235]++;
  e.preventDefault();
  _$jscoverage['assets/js/customizer.js'][236]++;
  inputsVariables.val("");
}));
  _$jscoverage['assets/js/customizer.js'][239]++;
  $("[data-dependencies]").on("click", (function () {
  _$jscoverage['assets/js/customizer.js'][240]++;
  if ((! $(this).is(":checked"))) {
    _$jscoverage['assets/js/customizer.js'][240]++;
    return;
  }
  _$jscoverage['assets/js/customizer.js'][241]++;
  var dependencies = this.getAttribute("data-dependencies");
  _$jscoverage['assets/js/customizer.js'][242]++;
  if ((! dependencies)) {
    _$jscoverage['assets/js/customizer.js'][242]++;
    return;
  }
  _$jscoverage['assets/js/customizer.js'][243]++;
  dependencies = dependencies.split(",");
  _$jscoverage['assets/js/customizer.js'][244]++;
  for (var i = 0; (i < dependencies.length); (i++)) {
    _$jscoverage['assets/js/customizer.js'][245]++;
    var dependency = $(("[value=\"" + dependencies[i] + "\"]"));
    _$jscoverage['assets/js/customizer.js'][246]++;
    (dependency && dependency.prop("checked", true));
}
}));
  _$jscoverage['assets/js/customizer.js'][250]++;
  $("[data-dependents]").on("click", (function () {
  _$jscoverage['assets/js/customizer.js'][251]++;
  if ($(this).is(":checked")) {
    _$jscoverage['assets/js/customizer.js'][251]++;
    return;
  }
  _$jscoverage['assets/js/customizer.js'][252]++;
  var dependents = this.getAttribute("data-dependents");
  _$jscoverage['assets/js/customizer.js'][253]++;
  if ((! dependents)) {
    _$jscoverage['assets/js/customizer.js'][253]++;
    return;
  }
  _$jscoverage['assets/js/customizer.js'][254]++;
  dependents = dependents.split(",");
  _$jscoverage['assets/js/customizer.js'][255]++;
  for (var i = 0; (i < dependents.length); (i++)) {
    _$jscoverage['assets/js/customizer.js'][256]++;
    var dependent = $(("[value=\"" + dependents[i] + "\"]"));
    _$jscoverage['assets/js/customizer.js'][257]++;
    (dependent && dependent.prop("checked", false));
}
}));
  _$jscoverage['assets/js/customizer.js'][261]++;
  var $compileBtn = $("#btn-compile");
  _$jscoverage['assets/js/customizer.js'][262]++;
  var $downloadBtn = $("#btn-download");
  _$jscoverage['assets/js/customizer.js'][264]++;
  $compileBtn.on("click", (function (e) {
  _$jscoverage['assets/js/customizer.js'][265]++;
  e.preventDefault();
  _$jscoverage['assets/js/customizer.js'][267]++;
  $compileBtn.attr("disabled", "disabled");
  _$jscoverage['assets/js/customizer.js'][269]++;
  generateZip(generateCSS(), generateJavascript(), generateFonts(), (function (blob) {
  _$jscoverage['assets/js/customizer.js'][270]++;
  $compileBtn.removeAttr("disabled");
  _$jscoverage['assets/js/customizer.js'][271]++;
  saveAs(blob, "bootstrap.zip");
  _$jscoverage['assets/js/customizer.js'][272]++;
  createGist(getCustomizerData());
}));
}));
  _$jscoverage['assets/js/customizer.js'][277]++;
  if (((! window.URL) && (navigator.userAgent.toLowerCase().indexOf("safari") != -1))) {
    _$jscoverage['assets/js/customizer.js'][278]++;
    showCallout("Looks like you're using safari, which sadly doesn't have the best support                 for HTML5 blobs. Because of this your file will be downloaded with the name <code>\"untitled\"</code>.                 However, if you check your downloads folder, just rename this <code>\"untitled\"</code> file                 to <code>\"bootstrap.zip\"</code> and you should be good to go!");
  }
  else {
    _$jscoverage['assets/js/customizer.js'][282]++;
    if (((! window.URL) && (! window.webkitURL))) {
      _$jscoverage['assets/js/customizer.js'][283]++;
      $(".bs-docs-section, .bs-sidebar").css("display", "none");
      _$jscoverage['assets/js/customizer.js'][285]++;
      showCallout("Looks like your current browser doesn't support the Bootstrap Customizer. Please take a second                to <a href=\"https://www.google.com/intl/en/chrome/browser/\"> upgrade to a more modern browser</a>.", true);
    }
  }
  _$jscoverage['assets/js/customizer.js'][289]++;
  parseUrl();
});
