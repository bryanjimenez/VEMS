/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['assets/js/holder.js']) {
  _$jscoverage['assets/js/holder.js'] = [];
  _$jscoverage['assets/js/holder.js'][11] = 0;
  _$jscoverage['assets/js/holder.js'][12] = 0;
  _$jscoverage['assets/js/holder.js'][14] = 0;
  _$jscoverage['assets/js/holder.js'][19] = 0;
  _$jscoverage['assets/js/holder.js'][22] = 0;
  _$jscoverage['assets/js/holder.js'][25] = 0;
  _$jscoverage['assets/js/holder.js'][28] = 0;
  _$jscoverage['assets/js/holder.js'][29] = 0;
  _$jscoverage['assets/js/holder.js'][30] = 0;
  _$jscoverage['assets/js/holder.js'][34] = 0;
  _$jscoverage['assets/js/holder.js'][37] = 0;
  _$jscoverage['assets/js/holder.js'][38] = 0;
  _$jscoverage['assets/js/holder.js'][39] = 0;
  _$jscoverage['assets/js/holder.js'][40] = 0;
  _$jscoverage['assets/js/holder.js'][43] = 0;
  _$jscoverage['assets/js/holder.js'][44] = 0;
  _$jscoverage['assets/js/holder.js'][45] = 0;
  _$jscoverage['assets/js/holder.js'][46] = 0;
  _$jscoverage['assets/js/holder.js'][47] = 0;
  _$jscoverage['assets/js/holder.js'][48] = 0;
  _$jscoverage['assets/js/holder.js'][49] = 0;
  _$jscoverage['assets/js/holder.js'][50] = 0;
  _$jscoverage['assets/js/holder.js'][55] = 0;
  _$jscoverage['assets/js/holder.js'][56] = 0;
  _$jscoverage['assets/js/holder.js'][57] = 0;
  _$jscoverage['assets/js/holder.js'][58] = 0;
  _$jscoverage['assets/js/holder.js'][60] = 0;
  _$jscoverage['assets/js/holder.js'][61] = 0;
  _$jscoverage['assets/js/holder.js'][62] = 0;
  _$jscoverage['assets/js/holder.js'][63] = 0;
  _$jscoverage['assets/js/holder.js'][64] = 0;
  _$jscoverage['assets/js/holder.js'][65] = 0;
  _$jscoverage['assets/js/holder.js'][66] = 0;
  _$jscoverage['assets/js/holder.js'][67] = 0;
  _$jscoverage['assets/js/holder.js'][68] = 0;
  _$jscoverage['assets/js/holder.js'][69] = 0;
  _$jscoverage['assets/js/holder.js'][70] = 0;
  _$jscoverage['assets/js/holder.js'][71] = 0;
  _$jscoverage['assets/js/holder.js'][72] = 0;
  _$jscoverage['assets/js/holder.js'][75] = 0;
  _$jscoverage['assets/js/holder.js'][76] = 0;
  _$jscoverage['assets/js/holder.js'][77] = 0;
  _$jscoverage['assets/js/holder.js'][80] = 0;
  _$jscoverage['assets/js/holder.js'][81] = 0;
  _$jscoverage['assets/js/holder.js'][84] = 0;
  _$jscoverage['assets/js/holder.js'][85] = 0;
  _$jscoverage['assets/js/holder.js'][88] = 0;
  _$jscoverage['assets/js/holder.js'][91] = 0;
  _$jscoverage['assets/js/holder.js'][92] = 0;
  _$jscoverage['assets/js/holder.js'][93] = 0;
  _$jscoverage['assets/js/holder.js'][94] = 0;
  _$jscoverage['assets/js/holder.js'][95] = 0;
  _$jscoverage['assets/js/holder.js'][96] = 0;
  _$jscoverage['assets/js/holder.js'][98] = 0;
  _$jscoverage['assets/js/holder.js'][99] = 0;
  _$jscoverage['assets/js/holder.js'][101] = 0;
  _$jscoverage['assets/js/holder.js'][103] = 0;
  _$jscoverage['assets/js/holder.js'][104] = 0;
  _$jscoverage['assets/js/holder.js'][105] = 0;
  _$jscoverage['assets/js/holder.js'][106] = 0;
  _$jscoverage['assets/js/holder.js'][108] = 0;
  _$jscoverage['assets/js/holder.js'][109] = 0;
  _$jscoverage['assets/js/holder.js'][110] = 0;
  _$jscoverage['assets/js/holder.js'][111] = 0;
  _$jscoverage['assets/js/holder.js'][112] = 0;
  _$jscoverage['assets/js/holder.js'][114] = 0;
  _$jscoverage['assets/js/holder.js'][116] = 0;
  _$jscoverage['assets/js/holder.js'][117] = 0;
  _$jscoverage['assets/js/holder.js'][119] = 0;
  _$jscoverage['assets/js/holder.js'][121] = 0;
  _$jscoverage['assets/js/holder.js'][122] = 0;
  _$jscoverage['assets/js/holder.js'][124] = 0;
  _$jscoverage['assets/js/holder.js'][125] = 0;
  _$jscoverage['assets/js/holder.js'][127] = 0;
  _$jscoverage['assets/js/holder.js'][128] = 0;
  _$jscoverage['assets/js/holder.js'][129] = 0;
  _$jscoverage['assets/js/holder.js'][132] = 0;
  _$jscoverage['assets/js/holder.js'][134] = 0;
  _$jscoverage['assets/js/holder.js'][135] = 0;
  _$jscoverage['assets/js/holder.js'][136] = 0;
  _$jscoverage['assets/js/holder.js'][137] = 0;
  _$jscoverage['assets/js/holder.js'][139] = 0;
  _$jscoverage['assets/js/holder.js'][141] = 0;
  _$jscoverage['assets/js/holder.js'][142] = 0;
  _$jscoverage['assets/js/holder.js'][143] = 0;
  _$jscoverage['assets/js/holder.js'][144] = 0;
  _$jscoverage['assets/js/holder.js'][145] = 0;
  _$jscoverage['assets/js/holder.js'][153] = 0;
  _$jscoverage['assets/js/holder.js'][155] = 0;
  _$jscoverage['assets/js/holder.js'][159] = 0;
  _$jscoverage['assets/js/holder.js'][160] = 0;
  _$jscoverage['assets/js/holder.js'][161] = 0;
  _$jscoverage['assets/js/holder.js'][162] = 0;
  _$jscoverage['assets/js/holder.js'][163] = 0;
  _$jscoverage['assets/js/holder.js'][164] = 0;
  _$jscoverage['assets/js/holder.js'][165] = 0;
  _$jscoverage['assets/js/holder.js'][166] = 0;
  _$jscoverage['assets/js/holder.js'][167] = 0;
  _$jscoverage['assets/js/holder.js'][168] = 0;
  _$jscoverage['assets/js/holder.js'][169] = 0;
  _$jscoverage['assets/js/holder.js'][170] = 0;
  _$jscoverage['assets/js/holder.js'][172] = 0;
  _$jscoverage['assets/js/holder.js'][173] = 0;
  _$jscoverage['assets/js/holder.js'][174] = 0;
  _$jscoverage['assets/js/holder.js'][175] = 0;
  _$jscoverage['assets/js/holder.js'][176] = 0;
  _$jscoverage['assets/js/holder.js'][177] = 0;
  _$jscoverage['assets/js/holder.js'][178] = 0;
  _$jscoverage['assets/js/holder.js'][182] = 0;
  _$jscoverage['assets/js/holder.js'][184] = 0;
  _$jscoverage['assets/js/holder.js'][188] = 0;
  _$jscoverage['assets/js/holder.js'][189] = 0;
  _$jscoverage['assets/js/holder.js'][191] = 0;
  _$jscoverage['assets/js/holder.js'][194] = 0;
  _$jscoverage['assets/js/holder.js'][196] = 0;
  _$jscoverage['assets/js/holder.js'][200] = 0;
  _$jscoverage['assets/js/holder.js'][202] = 0;
  _$jscoverage['assets/js/holder.js'][203] = 0;
  _$jscoverage['assets/js/holder.js'][207] = 0;
  _$jscoverage['assets/js/holder.js'][209] = 0;
  _$jscoverage['assets/js/holder.js'][211] = 0;
  _$jscoverage['assets/js/holder.js'][236] = 0;
  _$jscoverage['assets/js/holder.js'][240] = 0;
  _$jscoverage['assets/js/holder.js'][241] = 0;
  _$jscoverage['assets/js/holder.js'][250] = 0;
  _$jscoverage['assets/js/holder.js'][251] = 0;
  _$jscoverage['assets/js/holder.js'][260] = 0;
  _$jscoverage['assets/js/holder.js'][261] = 0;
  _$jscoverage['assets/js/holder.js'][271] = 0;
  _$jscoverage['assets/js/holder.js'][277] = 0;
  _$jscoverage['assets/js/holder.js'][285] = 0;
  _$jscoverage['assets/js/holder.js'][286] = 0;
  _$jscoverage['assets/js/holder.js'][287] = 0;
  _$jscoverage['assets/js/holder.js'][288] = 0;
  _$jscoverage['assets/js/holder.js'][292] = 0;
  _$jscoverage['assets/js/holder.js'][293] = 0;
  _$jscoverage['assets/js/holder.js'][294] = 0;
  _$jscoverage['assets/js/holder.js'][297] = 0;
  _$jscoverage['assets/js/holder.js'][298] = 0;
  _$jscoverage['assets/js/holder.js'][299] = 0;
  _$jscoverage['assets/js/holder.js'][300] = 0;
  _$jscoverage['assets/js/holder.js'][301] = 0;
  _$jscoverage['assets/js/holder.js'][302] = 0;
  _$jscoverage['assets/js/holder.js'][303] = 0;
  _$jscoverage['assets/js/holder.js'][306] = 0;
  _$jscoverage['assets/js/holder.js'][309] = 0;
  _$jscoverage['assets/js/holder.js'][310] = 0;
  _$jscoverage['assets/js/holder.js'][313] = 0;
  _$jscoverage['assets/js/holder.js'][314] = 0;
  _$jscoverage['assets/js/holder.js'][316] = 0;
  _$jscoverage['assets/js/holder.js'][317] = 0;
  _$jscoverage['assets/js/holder.js'][318] = 0;
  _$jscoverage['assets/js/holder.js'][319] = 0;
  _$jscoverage['assets/js/holder.js'][322] = 0;
  _$jscoverage['assets/js/holder.js'][323] = 0;
  _$jscoverage['assets/js/holder.js'][324] = 0;
  _$jscoverage['assets/js/holder.js'][325] = 0;
  _$jscoverage['assets/js/holder.js'][326] = 0;
  _$jscoverage['assets/js/holder.js'][327] = 0;
  _$jscoverage['assets/js/holder.js'][330] = 0;
  _$jscoverage['assets/js/holder.js'][332] = 0;
  _$jscoverage['assets/js/holder.js'][334] = 0;
  _$jscoverage['assets/js/holder.js'][335] = 0;
  _$jscoverage['assets/js/holder.js'][336] = 0;
  _$jscoverage['assets/js/holder.js'][337] = 0;
  _$jscoverage['assets/js/holder.js'][338] = 0;
  _$jscoverage['assets/js/holder.js'][339] = 0;
  _$jscoverage['assets/js/holder.js'][342] = 0;
  _$jscoverage['assets/js/holder.js'][343] = 0;
  _$jscoverage['assets/js/holder.js'][344] = 0;
  _$jscoverage['assets/js/holder.js'][346] = 0;
  _$jscoverage['assets/js/holder.js'][350] = 0;
  _$jscoverage['assets/js/holder.js'][352] = 0;
  _$jscoverage['assets/js/holder.js'][353] = 0;
  _$jscoverage['assets/js/holder.js'][355] = 0;
  _$jscoverage['assets/js/holder.js'][356] = 0;
  _$jscoverage['assets/js/holder.js'][358] = 0;
  _$jscoverage['assets/js/holder.js'][359] = 0;
  _$jscoverage['assets/js/holder.js'][360] = 0;
  _$jscoverage['assets/js/holder.js'][361] = 0;
  _$jscoverage['assets/js/holder.js'][364] = 0;
  _$jscoverage['assets/js/holder.js'][365] = 0;
  _$jscoverage['assets/js/holder.js'][367] = 0;
  _$jscoverage['assets/js/holder.js'][368] = 0;
  _$jscoverage['assets/js/holder.js'][373] = 0;
  _$jscoverage['assets/js/holder.js'][375] = 0;
  _$jscoverage['assets/js/holder.js'][377] = 0;
  _$jscoverage['assets/js/holder.js'][378] = 0;
  _$jscoverage['assets/js/holder.js'][379] = 0;
  _$jscoverage['assets/js/holder.js'][382] = 0;
  _$jscoverage['assets/js/holder.js'][383] = 0;
  _$jscoverage['assets/js/holder.js'][384] = 0;
  _$jscoverage['assets/js/holder.js'][385] = 0;
  _$jscoverage['assets/js/holder.js'][388] = 0;
  _$jscoverage['assets/js/holder.js'][389] = 0;
  _$jscoverage['assets/js/holder.js'][391] = 0;
  _$jscoverage['assets/js/holder.js'][392] = 0;
  _$jscoverage['assets/js/holder.js'][393] = 0;
  _$jscoverage['assets/js/holder.js'][395] = 0;
  _$jscoverage['assets/js/holder.js'][400] = 0;
  _$jscoverage['assets/js/holder.js'][403] = 0;
  _$jscoverage['assets/js/holder.js'][404] = 0;
  _$jscoverage['assets/js/holder.js'][405] = 0;
  _$jscoverage['assets/js/holder.js'][406] = 0;
  _$jscoverage['assets/js/holder.js'][408] = 0;
  _$jscoverage['assets/js/holder.js'][410] = 0;
  _$jscoverage['assets/js/holder.js'][413] = 0;
  _$jscoverage['assets/js/holder.js'][414] = 0;
  _$jscoverage['assets/js/holder.js'][415] = 0;
}
_$jscoverage['assets/js/holder.js'].source = ["<span class=\"c\">/*</span>","","<span class=\"c\">Holder - 2.0 - client side image placeholders</span>","<span class=\"c\">(c) 2012-2013 Ivan Malopinsky / http://imsky.co</span>","","<span class=\"c\">Provided under the Apache 2.0 License: http://www.apache.org/licenses/LICENSE-2.0</span>","<span class=\"c\">Commercial use requires attribution.</span>","","<span class=\"c\">*/</span>","","<span class=\"k\">var</span> Holder <span class=\"k\">=</span> Holder <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>app<span class=\"k\">,</span> win<span class=\"k\">)</span> <span class=\"k\">{</span>","","<span class=\"k\">var</span> preempted <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","fallback <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","canvas <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'canvas'</span><span class=\"k\">);</span>","","<span class=\"c\">//getElementsByClassName polyfill</span>","document<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">||(</span>document<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> t<span class=\"k\">=</span>document<span class=\"k\">,</span>n<span class=\"k\">,</span>r<span class=\"k\">,</span>i<span class=\"k\">,</span>s<span class=\"k\">=[];</span><span class=\"k\">if</span><span class=\"k\">(</span>t<span class=\"k\">.</span>querySelectorAll<span class=\"k\">)</span><span class=\"k\">return</span> t<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\".\"</span><span class=\"k\">+</span>e<span class=\"k\">);</span><span class=\"k\">if</span><span class=\"k\">(</span>t<span class=\"k\">.</span>evaluate<span class=\"k\">)</span><span class=\"k\">{</span>r<span class=\"k\">=</span><span class=\"s\">\".//*[contains(concat(' ', @class, ' '), ' \"</span><span class=\"k\">+</span>e<span class=\"k\">+</span><span class=\"s\">\" ')]\"</span><span class=\"k\">,</span>n<span class=\"k\">=</span>t<span class=\"k\">.</span>evaluate<span class=\"k\">(</span>r<span class=\"k\">,</span>t<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">);</span><span class=\"k\">while</span><span class=\"k\">(</span>i<span class=\"k\">=</span>n<span class=\"k\">.</span>iterateNext<span class=\"k\">())</span>s<span class=\"k\">.</span>push<span class=\"k\">(</span>i<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>n<span class=\"k\">=</span>t<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"*\"</span><span class=\"k\">),</span>r<span class=\"k\">=</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span><span class=\"s\">\"(^|</span><span class=\"t\">\\\\</span><span class=\"s\">s)\"</span><span class=\"k\">+</span>e<span class=\"k\">+</span><span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">s|$)\"</span><span class=\"k\">);</span><span class=\"k\">for</span><span class=\"k\">(</span>i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">&lt;</span>n<span class=\"k\">.</span>length<span class=\"k\">;</span>i<span class=\"k\">++)</span>r<span class=\"k\">.</span>test<span class=\"k\">(</span>n<span class=\"k\">[</span>i<span class=\"k\">].</span>className<span class=\"k\">)&amp;&amp;</span>s<span class=\"k\">.</span>push<span class=\"k\">(</span>n<span class=\"k\">[</span>i<span class=\"k\">])</span><span class=\"k\">}</span><span class=\"k\">return</span> s<span class=\"k\">}</span><span class=\"k\">)</span>","","<span class=\"c\">//getComputedStyle polyfill</span>","window<span class=\"k\">.</span>getComputedStyle<span class=\"k\">||(</span>window<span class=\"k\">.</span>getComputedStyle<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>el<span class=\"k\">=</span>e<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">.</span>getPropertyValue<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> n<span class=\"k\">=</span><span class=\"s\">/(\\-([a-z]){1})/g</span><span class=\"k\">;</span><span class=\"k\">return</span> t<span class=\"k\">==</span><span class=\"s\">\"float\"</span><span class=\"k\">&amp;&amp;(</span>t<span class=\"k\">=</span><span class=\"s\">\"styleFloat\"</span><span class=\"k\">),</span>n<span class=\"k\">.</span>test<span class=\"k\">(</span>t<span class=\"k\">)&amp;&amp;(</span>t<span class=\"k\">=</span>t<span class=\"k\">.</span>replace<span class=\"k\">(</span>n<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">return</span> arguments<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">].</span>toUpperCase<span class=\"k\">()</span><span class=\"k\">}</span><span class=\"k\">)),</span>e<span class=\"k\">.</span>currentStyle<span class=\"k\">[</span>t<span class=\"k\">]?</span>e<span class=\"k\">.</span>currentStyle<span class=\"k\">[</span>t<span class=\"k\">]:</span><span class=\"k\">null</span><span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">}</span><span class=\"k\">)</span>","","<span class=\"c\">//http://javascript.nwbox.com/ContentLoaded by Diego Perini with modifications</span>","<span class=\"k\">function</span> contentLoaded<span class=\"k\">(</span>n<span class=\"k\">,</span>t<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> l<span class=\"k\">=</span><span class=\"s\">\"complete\"</span><span class=\"k\">,</span>s<span class=\"k\">=</span><span class=\"s\">\"readystatechange\"</span><span class=\"k\">,</span>u<span class=\"k\">=!</span><span class=\"s\">1</span><span class=\"k\">,</span>h<span class=\"k\">=</span>u<span class=\"k\">,</span>c<span class=\"k\">=!</span><span class=\"s\">0</span><span class=\"k\">,</span>i<span class=\"k\">=</span>n<span class=\"k\">.</span>document<span class=\"k\">,</span>a<span class=\"k\">=</span>i<span class=\"k\">.</span>documentElement<span class=\"k\">,</span>e<span class=\"k\">=</span>i<span class=\"k\">.</span>addEventListener<span class=\"k\">?</span><span class=\"s\">\"addEventListener\"</span><span class=\"k\">:</span><span class=\"s\">\"attachEvent\"</span><span class=\"k\">,</span>v<span class=\"k\">=</span>i<span class=\"k\">.</span>addEventListener<span class=\"k\">?</span><span class=\"s\">\"removeEventListener\"</span><span class=\"k\">:</span><span class=\"s\">\"detachEvent\"</span><span class=\"k\">,</span>f<span class=\"k\">=</span>i<span class=\"k\">.</span>addEventListener<span class=\"k\">?</span><span class=\"s\">\"\"</span><span class=\"k\">:</span><span class=\"s\">\"on\"</span><span class=\"k\">,</span>r<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">(</span>e<span class=\"k\">.</span>type<span class=\"k\">!=</span>s<span class=\"k\">||</span>i<span class=\"k\">.</span>readyState<span class=\"k\">==</span>l<span class=\"k\">)&amp;&amp;((</span>e<span class=\"k\">.</span>type<span class=\"k\">==</span><span class=\"s\">\"load\"</span><span class=\"k\">?</span>n<span class=\"k\">:</span>i<span class=\"k\">)[</span>v<span class=\"k\">](</span>f<span class=\"k\">+</span>e<span class=\"k\">.</span>type<span class=\"k\">,</span>r<span class=\"k\">,</span>u<span class=\"k\">),!</span>h<span class=\"k\">&amp;&amp;(</span>h<span class=\"k\">=!</span><span class=\"s\">0</span><span class=\"k\">)&amp;&amp;</span>t<span class=\"k\">.</span>call<span class=\"k\">(</span>n<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">))</span><span class=\"k\">}</span><span class=\"k\">,</span>o<span class=\"k\">=</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span><span class=\"k\">try</span><span class=\"k\">{</span>a<span class=\"k\">.</span>doScroll<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span>setTimeout<span class=\"k\">(</span>o<span class=\"k\">,</span><span class=\"s\">50</span><span class=\"k\">);</span><span class=\"k\">return</span><span class=\"k\">}</span>r<span class=\"k\">(</span><span class=\"s\">\"poll\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">.</span>readyState<span class=\"k\">==</span>l<span class=\"k\">)</span>t<span class=\"k\">.</span>call<span class=\"k\">(</span>n<span class=\"k\">,</span><span class=\"s\">\"lazy\"</span><span class=\"k\">);</span><span class=\"k\">else</span><span class=\"k\">{</span><span class=\"k\">if</span><span class=\"k\">(</span>i<span class=\"k\">.</span>createEventObject<span class=\"k\">&amp;&amp;</span>a<span class=\"k\">.</span>doScroll<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">try</span><span class=\"k\">{</span>c<span class=\"k\">=!</span>n<span class=\"k\">.</span>frameElement<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>y<span class=\"k\">)</span><span class=\"k\">{}</span>c<span class=\"k\">&amp;&amp;</span>o<span class=\"k\">()</span><span class=\"k\">}</span>i<span class=\"k\">[</span>e<span class=\"k\">](</span>f<span class=\"k\">+</span><span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span>r<span class=\"k\">,</span>u<span class=\"k\">),</span>i<span class=\"k\">[</span>e<span class=\"k\">](</span>f<span class=\"k\">+</span>s<span class=\"k\">,</span>r<span class=\"k\">,</span>u<span class=\"k\">),</span>n<span class=\"k\">[</span>e<span class=\"k\">](</span>f<span class=\"k\">+</span><span class=\"s\">\"load\"</span><span class=\"k\">,</span>r<span class=\"k\">,</span>u<span class=\"k\">)</span><span class=\"k\">}}</span><span class=\"k\">;</span>","","<span class=\"c\">//https://gist.github.com/991057 by Jed Schmidt with modifications</span>","<span class=\"k\">function</span> selector<span class=\"k\">(</span>a<span class=\"k\">)</span><span class=\"k\">{</span>","\ta<span class=\"k\">=</span>a<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/^(\\W)?(.*)/</span><span class=\"k\">);</span><span class=\"k\">var</span> b<span class=\"k\">=</span>document<span class=\"k\">[</span><span class=\"s\">\"getElement\"</span><span class=\"k\">+(</span>a<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]?</span>a<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]==</span><span class=\"s\">\"#\"</span><span class=\"k\">?</span><span class=\"s\">\"ById\"</span><span class=\"k\">:</span><span class=\"s\">\"sByClassName\"</span><span class=\"k\">:</span><span class=\"s\">\"sByTagName\"</span><span class=\"k\">)](</span>a<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]);</span>","\t<span class=\"k\">var</span> ret<span class=\"k\">=[];</span>\tb<span class=\"k\">!=</span><span class=\"k\">null</span><span class=\"k\">&amp;&amp;(</span>b<span class=\"k\">.</span>length<span class=\"k\">?</span>ret<span class=\"k\">=</span>b<span class=\"k\">:</span>b<span class=\"k\">.</span>length<span class=\"k\">==</span><span class=\"s\">0</span><span class=\"k\">?</span>ret<span class=\"k\">=</span>b<span class=\"k\">:</span>ret<span class=\"k\">=[</span>b<span class=\"k\">]);</span>\t<span class=\"k\">return</span> ret<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"c\">//shallow object property extend</span>","<span class=\"k\">function</span> extend<span class=\"k\">(</span>a<span class=\"k\">,</span>b<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">var</span> c<span class=\"k\">=</span><span class=\"k\">{}</span><span class=\"k\">;</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> d <span class=\"k\">in</span> a<span class=\"k\">)</span>c<span class=\"k\">[</span>d<span class=\"k\">]=</span>a<span class=\"k\">[</span>d<span class=\"k\">];</span><span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> e <span class=\"k\">in</span> b<span class=\"k\">)</span>c<span class=\"k\">[</span>e<span class=\"k\">]=</span>b<span class=\"k\">[</span>e<span class=\"k\">];</span><span class=\"k\">return</span> c<span class=\"k\">}</span>","","<span class=\"c\">//hasOwnProperty polyfill</span>","<span class=\"k\">if</span> <span class=\"k\">(!</span>Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">)</span>","\tObject<span class=\"k\">.</span>prototype<span class=\"k\">.</span>hasOwnProperty <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>prop<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> proto <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>__proto__ <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>constructor<span class=\"k\">.</span>prototype<span class=\"k\">;</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">(</span>prop <span class=\"k\">in</span> <span class=\"k\">this</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!(</span>prop <span class=\"k\">in</span> proto<span class=\"k\">)</span> <span class=\"k\">||</span> proto<span class=\"k\">[</span>prop<span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"k\">this</span><span class=\"k\">[</span>prop<span class=\"k\">]);</span>","\t<span class=\"k\">}</span>","","<span class=\"k\">function</span> text_size<span class=\"k\">(</span>width<span class=\"k\">,</span> height<span class=\"k\">,</span> template<span class=\"k\">)</span> <span class=\"k\">{</span>","\theight <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>height<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span>","\twidth <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>width<span class=\"k\">,</span><span class=\"s\">10</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> bigSide <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>height<span class=\"k\">,</span> width<span class=\"k\">)</span>","\t<span class=\"k\">var</span> smallSide <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>height<span class=\"k\">,</span> width<span class=\"k\">)</span>","\t<span class=\"k\">var</span> scale <span class=\"k\">=</span> <span class=\"s\">1</span> <span class=\"k\">/</span> <span class=\"s\">12</span><span class=\"k\">;</span>","\t<span class=\"k\">var</span> newHeight <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span>smallSide <span class=\"k\">*</span> <span class=\"s\">0.75</span><span class=\"k\">,</span> <span class=\"s\">0.75</span> <span class=\"k\">*</span> bigSide <span class=\"k\">*</span> scale<span class=\"k\">);</span>","\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\theight<span class=\"k\">:</span> Math<span class=\"k\">.</span>round<span class=\"k\">(</span>Math<span class=\"k\">.</span>max<span class=\"k\">(</span>template<span class=\"k\">.</span>size<span class=\"k\">,</span> newHeight<span class=\"k\">))</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> draw<span class=\"k\">(</span>ctx<span class=\"k\">,</span> dimensions<span class=\"k\">,</span> template<span class=\"k\">,</span> ratio<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> ts <span class=\"k\">=</span> text_size<span class=\"k\">(</span>dimensions<span class=\"k\">.</span>width<span class=\"k\">,</span> dimensions<span class=\"k\">.</span>height<span class=\"k\">,</span> template<span class=\"k\">);</span>","\t<span class=\"k\">var</span> text_height <span class=\"k\">=</span> ts<span class=\"k\">.</span>height<span class=\"k\">;</span>","\t<span class=\"k\">var</span> width <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>width <span class=\"k\">*</span> ratio<span class=\"k\">,</span>","\t\theight <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>height <span class=\"k\">*</span> ratio<span class=\"k\">;</span>","\t<span class=\"k\">var</span> font <span class=\"k\">=</span> template<span class=\"k\">.</span>font <span class=\"k\">?</span> template<span class=\"k\">.</span>font <span class=\"k\">:</span> <span class=\"s\">\"sans-serif\"</span><span class=\"k\">;</span>","\tcanvas<span class=\"k\">.</span>width <span class=\"k\">=</span> width<span class=\"k\">;</span>","\tcanvas<span class=\"k\">.</span>height <span class=\"k\">=</span> height<span class=\"k\">;</span>","\tctx<span class=\"k\">.</span>textAlign <span class=\"k\">=</span> <span class=\"s\">\"center\"</span><span class=\"k\">;</span>","\tctx<span class=\"k\">.</span>textBaseline <span class=\"k\">=</span> <span class=\"s\">\"middle\"</span><span class=\"k\">;</span>","\tctx<span class=\"k\">.</span>fillStyle <span class=\"k\">=</span> template<span class=\"k\">.</span>background<span class=\"k\">;</span>","\tctx<span class=\"k\">.</span>fillRect<span class=\"k\">(</span><span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> width<span class=\"k\">,</span> height<span class=\"k\">);</span>","\tctx<span class=\"k\">.</span>fillStyle <span class=\"k\">=</span> template<span class=\"k\">.</span>foreground<span class=\"k\">;</span>","\tctx<span class=\"k\">.</span>font <span class=\"k\">=</span> <span class=\"s\">\"bold \"</span> <span class=\"k\">+</span> text_height <span class=\"k\">+</span> <span class=\"s\">\"px \"</span> <span class=\"k\">+</span> font<span class=\"k\">;</span>","\t<span class=\"k\">var</span> text <span class=\"k\">=</span> template<span class=\"k\">.</span>text <span class=\"k\">?</span> template<span class=\"k\">.</span>text <span class=\"k\">:</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>dimensions<span class=\"k\">.</span>width<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"x\"</span> <span class=\"k\">+</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>dimensions<span class=\"k\">.</span>height<span class=\"k\">));</span>","\t<span class=\"k\">var</span> text_width <span class=\"k\">=</span> ctx<span class=\"k\">.</span>measureText<span class=\"k\">(</span>text<span class=\"k\">).</span>width<span class=\"k\">;</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>text_width <span class=\"k\">/</span> width <span class=\"k\">&gt;=</span> <span class=\"s\">0.75</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\ttext_height <span class=\"k\">=</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>text_height <span class=\"k\">*</span> <span class=\"s\">0.75</span> <span class=\"k\">*</span> <span class=\"k\">(</span>width<span class=\"k\">/</span>text_width<span class=\"k\">));</span>","\t<span class=\"k\">}</span>","\t<span class=\"c\">//Resetting font size if necessary</span>","\tctx<span class=\"k\">.</span>font <span class=\"k\">=</span> <span class=\"s\">\"bold \"</span> <span class=\"k\">+</span> <span class=\"k\">(</span>text_height <span class=\"k\">*</span> ratio<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px \"</span> <span class=\"k\">+</span> font<span class=\"k\">;</span>","\tctx<span class=\"k\">.</span>fillText<span class=\"k\">(</span>text<span class=\"k\">,</span> <span class=\"k\">(</span>width <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">),</span> <span class=\"k\">(</span>height <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">),</span> width<span class=\"k\">);</span>","\t<span class=\"k\">return</span> canvas<span class=\"k\">.</span>toDataURL<span class=\"k\">(</span><span class=\"s\">\"image/png\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> render<span class=\"k\">(</span>mode<span class=\"k\">,</span> el<span class=\"k\">,</span> holder<span class=\"k\">,</span> src<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> dimensions <span class=\"k\">=</span> holder<span class=\"k\">.</span>dimensions<span class=\"k\">,</span>","\t\ttheme <span class=\"k\">=</span> holder<span class=\"k\">.</span>theme<span class=\"k\">,</span>","\t\ttext <span class=\"k\">=</span> holder<span class=\"k\">.</span>text <span class=\"k\">?</span> decodeURIComponent<span class=\"k\">(</span>holder<span class=\"k\">.</span>text<span class=\"k\">)</span> <span class=\"k\">:</span> holder<span class=\"k\">.</span>text<span class=\"k\">;</span>","\t<span class=\"k\">var</span> dimensions_caption <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>width <span class=\"k\">+</span> <span class=\"s\">\"x\"</span> <span class=\"k\">+</span> dimensions<span class=\"k\">.</span>height<span class=\"k\">;</span>","\ttheme <span class=\"k\">=</span> <span class=\"k\">(</span>text <span class=\"k\">?</span> extend<span class=\"k\">(</span>theme<span class=\"k\">,</span> <span class=\"k\">{</span>","\t\ttext<span class=\"k\">:</span> text","\t<span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span> theme<span class=\"k\">);</span>","\ttheme <span class=\"k\">=</span> <span class=\"k\">(</span>holder<span class=\"k\">.</span>font <span class=\"k\">?</span> extend<span class=\"k\">(</span>theme<span class=\"k\">,</span> <span class=\"k\">{</span>","\t\tfont<span class=\"k\">:</span> holder<span class=\"k\">.</span>font","\t<span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span> theme<span class=\"k\">);</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">==</span> <span class=\"s\">\"image\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tel<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"data-src\"</span><span class=\"k\">,</span> src<span class=\"k\">);</span>","\t\tel<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"alt\"</span><span class=\"k\">,</span> text <span class=\"k\">?</span> text <span class=\"k\">:</span> theme<span class=\"k\">.</span>text <span class=\"k\">?</span> theme<span class=\"k\">.</span>text <span class=\"k\">+</span> <span class=\"s\">\" [\"</span> <span class=\"k\">+</span> dimensions_caption <span class=\"k\">+</span> <span class=\"s\">\"]\"</span> <span class=\"k\">:</span> dimensions_caption<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>fallback <span class=\"k\">||</span> <span class=\"k\">!</span>holder<span class=\"k\">.</span>auto<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>width <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>height <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>fallback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundColor <span class=\"k\">=</span> theme<span class=\"k\">.</span>background<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">,</span> draw<span class=\"k\">(</span>ctx<span class=\"k\">,</span> dimensions<span class=\"k\">,</span> theme<span class=\"k\">,</span> ratio<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">==</span> <span class=\"s\">\"background\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(!</span>fallback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundImage <span class=\"k\">=</span> <span class=\"s\">\"url(\"</span> <span class=\"k\">+</span> draw<span class=\"k\">(</span>ctx<span class=\"k\">,</span> dimensions<span class=\"k\">,</span> theme<span class=\"k\">,</span> ratio<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\")\"</span><span class=\"k\">;</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundSize <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>width <span class=\"k\">+</span> <span class=\"s\">\"px \"</span> <span class=\"k\">+</span> dimensions<span class=\"k\">.</span>height <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>mode <span class=\"k\">==</span> <span class=\"s\">\"fluid\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tel<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"data-src\"</span><span class=\"k\">,</span> src<span class=\"k\">);</span>","\t\tel<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"alt\"</span><span class=\"k\">,</span> text <span class=\"k\">?</span> text <span class=\"k\">:</span> theme<span class=\"k\">.</span>text <span class=\"k\">?</span> theme<span class=\"k\">.</span>text <span class=\"k\">+</span> <span class=\"s\">\" [\"</span> <span class=\"k\">+</span> dimensions_caption <span class=\"k\">+</span> <span class=\"s\">\"]\"</span> <span class=\"k\">:</span> dimensions_caption<span class=\"k\">);</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>dimensions<span class=\"k\">.</span>height<span class=\"k\">.</span>substr<span class=\"k\">(-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"%\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>height","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>height <span class=\"k\">+</span> <span class=\"s\">\"px\"</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>dimensions<span class=\"k\">.</span>width<span class=\"k\">.</span>substr<span class=\"k\">(-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"%\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>width","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> dimensions<span class=\"k\">.</span>width <span class=\"k\">+</span> <span class=\"s\">\"px\"</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>el<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">==</span> <span class=\"s\">\"inline\"</span> <span class=\"k\">||</span> el<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">==</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"block\"</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>fallback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundColor <span class=\"k\">=</span> theme<span class=\"k\">.</span>background<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\tel<span class=\"k\">.</span>holderData <span class=\"k\">=</span> holder<span class=\"k\">;</span>","\t\t\tfluid_images<span class=\"k\">.</span>push<span class=\"k\">(</span>el<span class=\"k\">);</span>","\t\t\tfluid_update<span class=\"k\">(</span>el<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> fluid_update<span class=\"k\">(</span>element<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> images<span class=\"k\">;</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>element<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\timages <span class=\"k\">=</span> fluid_images<span class=\"k\">;</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\timages <span class=\"k\">=</span> <span class=\"k\">[</span>element<span class=\"k\">]</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">in</span> images<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> el <span class=\"k\">=</span> images<span class=\"k\">[</span>i<span class=\"k\">]</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>el<span class=\"k\">.</span>holderData<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> holder <span class=\"k\">=</span> el<span class=\"k\">.</span>holderData<span class=\"k\">;</span>","\t\t\tel<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">,</span> draw<span class=\"k\">(</span>ctx<span class=\"k\">,</span> <span class=\"k\">{</span>","\t\t\t\theight<span class=\"k\">:</span> el<span class=\"k\">.</span>clientHeight<span class=\"k\">,</span>","\t\t\t\twidth<span class=\"k\">:</span> el<span class=\"k\">.</span>clientWidth","\t\t\t<span class=\"k\">}</span><span class=\"k\">,</span> holder<span class=\"k\">.</span>theme<span class=\"k\">,</span> ratio<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> parse_flags<span class=\"k\">(</span>flags<span class=\"k\">,</span> options<span class=\"k\">)</span> <span class=\"k\">{</span>","","\t<span class=\"k\">var</span> ret <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\ttheme<span class=\"k\">:</span> settings<span class=\"k\">.</span>themes<span class=\"k\">.</span>gray","\t<span class=\"k\">}</span><span class=\"k\">,</span> render <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","\t<span class=\"k\">for</span> <span class=\"k\">(</span>sl <span class=\"k\">=</span> flags<span class=\"k\">.</span>length<span class=\"k\">,</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> j <span class=\"k\">&lt;</span> sl<span class=\"k\">;</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> flag <span class=\"k\">=</span> flags<span class=\"k\">[</span>j<span class=\"k\">];</span>","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>dimensions<span class=\"k\">.</span>match<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\trender <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\tret<span class=\"k\">.</span>dimensions <span class=\"k\">=</span> app<span class=\"k\">.</span>flags<span class=\"k\">.</span>dimensions<span class=\"k\">.</span>output<span class=\"k\">(</span>flag<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>fluid<span class=\"k\">.</span>match<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\trender <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t\tret<span class=\"k\">.</span>dimensions <span class=\"k\">=</span> app<span class=\"k\">.</span>flags<span class=\"k\">.</span>fluid<span class=\"k\">.</span>output<span class=\"k\">(</span>flag<span class=\"k\">);</span>","\t\t\tret<span class=\"k\">.</span>fluid <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>colors<span class=\"k\">.</span>match<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\tret<span class=\"k\">.</span>theme <span class=\"k\">=</span> app<span class=\"k\">.</span>flags<span class=\"k\">.</span>colors<span class=\"k\">.</span>output<span class=\"k\">(</span>flag<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>options<span class=\"k\">.</span>themes<span class=\"k\">[</span>flag<span class=\"k\">])</span> <span class=\"k\">{</span>","\t\t\t<span class=\"c\">//If a theme is specified, it will override custom colors</span>","\t\t\tret<span class=\"k\">.</span>theme <span class=\"k\">=</span> options<span class=\"k\">.</span>themes<span class=\"k\">[</span>flag<span class=\"k\">];</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>text<span class=\"k\">.</span>match<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\tret<span class=\"k\">.</span>text <span class=\"k\">=</span> app<span class=\"k\">.</span>flags<span class=\"k\">.</span>text<span class=\"k\">.</span>output<span class=\"k\">(</span>flag<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>font<span class=\"k\">.</span>match<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\tret<span class=\"k\">.</span>font <span class=\"k\">=</span> app<span class=\"k\">.</span>flags<span class=\"k\">.</span>font<span class=\"k\">.</span>output<span class=\"k\">(</span>flag<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>auto<span class=\"k\">.</span>match<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">{</span>","\t\t\tret<span class=\"k\">.</span>auto <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">return</span> render <span class=\"k\">?</span> ret <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>","","","","<span class=\"k\">if</span> <span class=\"k\">(!</span>canvas<span class=\"k\">.</span>getContext<span class=\"k\">)</span> <span class=\"k\">{</span>","\tfallback <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>canvas<span class=\"k\">.</span>toDataURL<span class=\"k\">(</span><span class=\"s\">\"image/png\"</span><span class=\"k\">)</span>","\t\t<span class=\"k\">.</span>indexOf<span class=\"k\">(</span><span class=\"s\">\"data:image/png\"</span><span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">//Android doesn't support data URI</span>","\t\tfallback <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> ctx <span class=\"k\">=</span> canvas<span class=\"k\">.</span>getContext<span class=\"k\">(</span><span class=\"s\">\"2d\"</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> dpr <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span> bsr <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","\t","<span class=\"k\">if</span><span class=\"k\">(!</span>fallback<span class=\"k\">)</span><span class=\"k\">{</span>","    dpr <span class=\"k\">=</span> window<span class=\"k\">.</span>devicePixelRatio <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">,</span>","    bsr <span class=\"k\">=</span> ctx<span class=\"k\">.</span>webkitBackingStorePixelRatio <span class=\"k\">||</span> ctx<span class=\"k\">.</span>mozBackingStorePixelRatio <span class=\"k\">||</span> ctx<span class=\"k\">.</span>msBackingStorePixelRatio <span class=\"k\">||</span> ctx<span class=\"k\">.</span>oBackingStorePixelRatio <span class=\"k\">||</span> ctx<span class=\"k\">.</span>backingStorePixelRatio <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">var</span> ratio <span class=\"k\">=</span> dpr <span class=\"k\">/</span> bsr<span class=\"k\">;</span>","","<span class=\"k\">var</span> fluid_images <span class=\"k\">=</span> <span class=\"k\">[];</span>","","<span class=\"k\">var</span> settings <span class=\"k\">=</span> <span class=\"k\">{</span>","\tdomain<span class=\"k\">:</span> <span class=\"s\">\"holder.js\"</span><span class=\"k\">,</span>","\timages<span class=\"k\">:</span> <span class=\"s\">\"img\"</span><span class=\"k\">,</span>","\tbgnodes<span class=\"k\">:</span> <span class=\"s\">\".holderjs\"</span><span class=\"k\">,</span>","\tthemes<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t<span class=\"s\">\"gray\"</span><span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tbackground<span class=\"k\">:</span> <span class=\"s\">\"#eee\"</span><span class=\"k\">,</span>","\t\t\tforeground<span class=\"k\">:</span> <span class=\"s\">\"#aaa\"</span><span class=\"k\">,</span>","\t\t\tsize<span class=\"k\">:</span> <span class=\"s\">12</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">\"social\"</span><span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tbackground<span class=\"k\">:</span> <span class=\"s\">\"#3a5a97\"</span><span class=\"k\">,</span>","\t\t\tforeground<span class=\"k\">:</span> <span class=\"s\">\"#fff\"</span><span class=\"k\">,</span>","\t\t\tsize<span class=\"k\">:</span> <span class=\"s\">12</span>","\t\t<span class=\"k\">}</span><span class=\"k\">,</span>","\t\t<span class=\"s\">\"industrial\"</span><span class=\"k\">:</span> <span class=\"k\">{</span>","\t\t\tbackground<span class=\"k\">:</span> <span class=\"s\">\"#434A52\"</span><span class=\"k\">,</span>","\t\t\tforeground<span class=\"k\">:</span> <span class=\"s\">\"#C2F200\"</span><span class=\"k\">,</span>","\t\t\tsize<span class=\"k\">:</span> <span class=\"s\">12</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tstylesheet<span class=\"k\">:</span> <span class=\"s\">\".holderjs-fluid {font-size:16px;font-weight:bold;text-align:center;font-family:sans-serif;margin:0}\"</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","","app<span class=\"k\">.</span>flags <span class=\"k\">=</span> <span class=\"k\">{</span>","\tdimensions<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tregex<span class=\"k\">:</span> <span class=\"s\">/^(\\d+)x(\\d+)$/</span><span class=\"k\">,</span>","\t\toutput<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> exec <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>regex<span class=\"k\">.</span>exec<span class=\"k\">(</span>val<span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\twidth<span class=\"k\">:</span> <span class=\"k\">+</span>exec<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span>","\t\t\t\theight<span class=\"k\">:</span> <span class=\"k\">+</span>exec<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tfluid<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tregex<span class=\"k\">:</span> <span class=\"s\">/^([0-9%]+)x([0-9%]+)$/</span><span class=\"k\">,</span>","\t\toutput<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> exec <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>regex<span class=\"k\">.</span>exec<span class=\"k\">(</span>val<span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\twidth<span class=\"k\">:</span> exec<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">],</span>","\t\t\t\theight<span class=\"k\">:</span> exec<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tcolors<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tregex<span class=\"k\">:</span> <span class=\"s\">/#([0-9a-f]{3,})\\:#([0-9a-f]{3,})/i</span><span class=\"k\">,</span>","\t\toutput<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> exec <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>regex<span class=\"k\">.</span>exec<span class=\"k\">(</span>val<span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\t\t\tsize<span class=\"k\">:</span> settings<span class=\"k\">.</span>themes<span class=\"k\">.</span>gray<span class=\"k\">.</span>size<span class=\"k\">,</span>","\t\t\t\tforeground<span class=\"k\">:</span> <span class=\"s\">\"#\"</span> <span class=\"k\">+</span> exec<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">],</span>","\t\t\t\tbackground<span class=\"k\">:</span> <span class=\"s\">\"#\"</span> <span class=\"k\">+</span> exec<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\ttext<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tregex<span class=\"k\">:</span> <span class=\"s\">/text\\:(.*)/</span><span class=\"k\">,</span>","\t\toutput<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>regex<span class=\"k\">.</span>exec<span class=\"k\">(</span>val<span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">];</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tfont<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tregex<span class=\"k\">:</span> <span class=\"s\">/font\\:(.*)/</span><span class=\"k\">,</span>","\t\toutput<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>regex<span class=\"k\">.</span>exec<span class=\"k\">(</span>val<span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">];</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span><span class=\"k\">,</span>","\tauto<span class=\"k\">:</span> <span class=\"k\">{</span>","\t\tregex<span class=\"k\">:</span> <span class=\"s\">/^auto$/</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> flag <span class=\"k\">in</span> app<span class=\"k\">.</span>flags<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">if</span> <span class=\"k\">(!</span>app<span class=\"k\">.</span>flags<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>flag<span class=\"k\">))</span> <span class=\"k\">continue</span><span class=\"k\">;</span>","\tapp<span class=\"k\">.</span>flags<span class=\"k\">[</span>flag<span class=\"k\">].</span>match <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> val<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>regex<span class=\"k\">)</span>","\t<span class=\"k\">}</span>","<span class=\"k\">}</span>","","app<span class=\"k\">.</span>add_theme <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">,</span> theme<span class=\"k\">)</span> <span class=\"k\">{</span>","\tname <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> theme <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>settings<span class=\"k\">.</span>themes<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> theme<span class=\"k\">);</span>","\t<span class=\"k\">return</span> app<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","app<span class=\"k\">.</span>add_image <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>src<span class=\"k\">,</span> el<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> node <span class=\"k\">=</span> selector<span class=\"k\">(</span>el<span class=\"k\">);</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> node<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> img <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"img\"</span><span class=\"k\">)</span>","\t\t\timg<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"data-src\"</span><span class=\"k\">,</span> src<span class=\"k\">);</span>","\t\t\tnode<span class=\"k\">[</span>i<span class=\"k\">].</span>appendChild<span class=\"k\">(</span>img<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">return</span> app<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","app<span class=\"k\">.</span>run <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>o<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> options <span class=\"k\">=</span> extend<span class=\"k\">(</span>settings<span class=\"k\">,</span> o<span class=\"k\">),</span>","\t    images <span class=\"k\">=</span> <span class=\"k\">[],</span> imageNodes <span class=\"k\">=</span> <span class=\"k\">[],</span> bgnodes <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t    ","\t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>options<span class=\"k\">.</span>images<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","\t    imageNodes <span class=\"k\">=</span> selector<span class=\"k\">(</span>options<span class=\"k\">.</span>images<span class=\"k\">);</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>NodeList <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>images <span class=\"k\">instanceof</span> window<span class=\"k\">.</span>NodeList<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\timageNodes <span class=\"k\">=</span> options<span class=\"k\">.</span>images<span class=\"k\">;</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>Node <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>images <span class=\"k\">instanceof</span> window<span class=\"k\">.</span>Node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\timageNodes <span class=\"k\">=</span> <span class=\"k\">[</span>options<span class=\"k\">.</span>images<span class=\"k\">];</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span><span class=\"k\">(</span>options<span class=\"k\">.</span>bgnodes<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span><span class=\"k\">{</span>","\t    bgnodes <span class=\"k\">=</span> selector<span class=\"k\">(</span>options<span class=\"k\">.</span>bgnodes<span class=\"k\">);</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>NodeList <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>elements <span class=\"k\">instanceof</span> window<span class=\"k\">.</span>NodeList<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tbgnodes <span class=\"k\">=</span> options<span class=\"k\">.</span>bgnodes<span class=\"k\">;</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>Node <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>bgnodes <span class=\"k\">instanceof</span> window<span class=\"k\">.</span>Node<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tbgnodes <span class=\"k\">=</span> <span class=\"k\">[</span>options<span class=\"k\">.</span>bgnodes<span class=\"k\">];</span>","\t<span class=\"k\">}</span>","","\tpreempted <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","\t<span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> imageNodes<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> images<span class=\"k\">.</span>push<span class=\"k\">(</span>imageNodes<span class=\"k\">[</span>i<span class=\"k\">]);</span>","","\t<span class=\"k\">var</span> holdercss <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">\"holderjs-style\"</span><span class=\"k\">);</span>","\t<span class=\"k\">if</span> <span class=\"k\">(!</span>holdercss<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tholdercss <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"style\"</span><span class=\"k\">);</span>","\t\tholdercss<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">,</span> <span class=\"s\">\"holderjs-style\"</span><span class=\"k\">);</span>","\t\tholdercss<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"text/css\"</span><span class=\"k\">;</span>","\t\tdocument<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>holdercss<span class=\"k\">);</span>","\t<span class=\"k\">}</span>","\t","\t<span class=\"k\">if</span> <span class=\"k\">(!</span>options<span class=\"k\">.</span>nocss<span class=\"k\">)</span> <span class=\"k\">{</span>","\t    <span class=\"k\">if</span> <span class=\"k\">(</span>holdercss<span class=\"k\">.</span>styleSheet<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t    holdercss<span class=\"k\">.</span>styleSheet<span class=\"k\">.</span>cssText <span class=\"k\">+=</span> options<span class=\"k\">.</span>stylesheet<span class=\"k\">;</span>","\t    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t    holdercss<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span>options<span class=\"k\">.</span>stylesheet<span class=\"k\">));</span>","\t    <span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">var</span> cssregex <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>options<span class=\"k\">.</span>domain <span class=\"k\">+</span> <span class=\"s\">\"</span><span class=\"t\">\\/</span><span class=\"s\">(.*?)</span><span class=\"t\">\\\"</span><span class=\"s\">?</span><span class=\"t\">\\\\</span><span class=\"s\">)\"</span><span class=\"k\">);</span>","","\t<span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> l <span class=\"k\">=</span> bgnodes<span class=\"k\">.</span>length<span class=\"k\">,</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> src <span class=\"k\">=</span> window<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>bgnodes<span class=\"k\">[</span>i<span class=\"k\">],</span> <span class=\"k\">null</span><span class=\"k\">)</span>","\t\t\t<span class=\"k\">.</span>getPropertyValue<span class=\"k\">(</span><span class=\"s\">\"background-image\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">var</span> flags <span class=\"k\">=</span> src<span class=\"k\">.</span>match<span class=\"k\">(</span>cssregex<span class=\"k\">);</span>","\t\t<span class=\"k\">var</span> bgsrc <span class=\"k\">=</span> bgnodes<span class=\"k\">[</span>i<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"data-background-src\"</span><span class=\"k\">);</span>","","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>flags<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> holder <span class=\"k\">=</span> parse_flags<span class=\"k\">(</span>flags<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>split<span class=\"k\">(</span><span class=\"s\">\"/\"</span><span class=\"k\">),</span> options<span class=\"k\">);</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>holder<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\trender<span class=\"k\">(</span><span class=\"s\">\"background\"</span><span class=\"k\">,</span> bgnodes<span class=\"k\">[</span>i<span class=\"k\">],</span> holder<span class=\"k\">,</span> src<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>bgsrc <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">)</span><span class=\"k\">{</span>","\t\t    <span class=\"k\">var</span> holder <span class=\"k\">=</span> parse_flags<span class=\"k\">(</span>bgsrc<span class=\"k\">.</span>substr<span class=\"k\">(</span>bgsrc<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span>options<span class=\"k\">.</span>domain<span class=\"k\">)</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>domain<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"/\"</span><span class=\"k\">),</span> options<span class=\"k\">);</span>","\t\t    <span class=\"k\">if</span><span class=\"k\">(</span>holder<span class=\"k\">)</span><span class=\"k\">{</span>","\t\t\trender<span class=\"k\">(</span><span class=\"s\">\"background\"</span><span class=\"k\">,</span> bgnodes<span class=\"k\">[</span>i<span class=\"k\">],</span> holder<span class=\"k\">,</span> src<span class=\"k\">);</span>","\t\t    <span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","","\t<span class=\"k\">for</span> <span class=\"k\">(</span>l <span class=\"k\">=</span> images<span class=\"k\">.</span>length<span class=\"k\">,</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","\t    ","\t\t<span class=\"k\">var</span> attr_src <span class=\"k\">=</span> attr_data_src <span class=\"k\">=</span> src <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","\t\t","\t\t<span class=\"k\">try</span><span class=\"k\">{</span>","\t\t    attr_src <span class=\"k\">=</span> images<span class=\"k\">[</span>i<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"src\"</span><span class=\"k\">);</span>","\t\t    attr_datasrc <span class=\"k\">=</span> images<span class=\"k\">[</span>i<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"data-src\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{}</span>","\t\t\t\t","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>attr_datasrc <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span> attr_src <span class=\"k\">&amp;&amp;</span> attr_src<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>options<span class=\"k\">.</span>domain<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tsrc <span class=\"k\">=</span> attr_src<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!!</span> attr_datasrc <span class=\"k\">&amp;&amp;</span> attr_datasrc<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>options<span class=\"k\">.</span>domain<span class=\"k\">)</span> <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tsrc <span class=\"k\">=</span> attr_datasrc<span class=\"k\">;</span>","\t\t<span class=\"k\">}</span>","\t\t","\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>src<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> holder <span class=\"k\">=</span> parse_flags<span class=\"k\">(</span>src<span class=\"k\">.</span>substr<span class=\"k\">(</span>src<span class=\"k\">.</span>lastIndexOf<span class=\"k\">(</span>options<span class=\"k\">.</span>domain<span class=\"k\">)</span> <span class=\"k\">+</span> options<span class=\"k\">.</span>domain<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"/\"</span><span class=\"k\">),</span> options<span class=\"k\">);</span>","\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>holder<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span> <span class=\"k\">(</span>holder<span class=\"k\">.</span>fluid<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\trender<span class=\"k\">(</span><span class=\"s\">\"fluid\"</span><span class=\"k\">,</span> images<span class=\"k\">[</span>i<span class=\"k\">],</span> holder<span class=\"k\">,</span> src<span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\t\trender<span class=\"k\">(</span><span class=\"s\">\"image\"</span><span class=\"k\">,</span> images<span class=\"k\">[</span>i<span class=\"k\">],</span> holder<span class=\"k\">,</span> src<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span>","\t<span class=\"k\">}</span>","\t<span class=\"k\">return</span> app<span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","contentLoaded<span class=\"k\">(</span>win<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t<span class=\"k\">if</span> <span class=\"k\">(</span>window<span class=\"k\">.</span>addEventListener<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\twindow<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"resize\"</span><span class=\"k\">,</span> fluid_update<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t\twindow<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"orientationchange\"</span><span class=\"k\">,</span> fluid_update<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\twindow<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">\"onresize\"</span><span class=\"k\">,</span> fluid_update<span class=\"k\">)</span>","\t<span class=\"k\">}</span>","\tpreempted <span class=\"k\">||</span> app<span class=\"k\">.</span>run<span class=\"k\">();</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> define <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> define<span class=\"k\">.</span>amd<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdefine<span class=\"k\">(</span><span class=\"s\">\"Holder\"</span><span class=\"k\">,</span> <span class=\"k\">[],</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">return</span> app<span class=\"k\">;</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">}</span><span class=\"k\">)(</span>Holder<span class=\"k\">,</span> window<span class=\"k\">);</span>"];
_$jscoverage['assets/js/holder.js'][11]++;
var Holder = (Holder || {});
_$jscoverage['assets/js/holder.js'][12]++;
(function (app, win) {
  _$jscoverage['assets/js/holder.js'][14]++;
  var preempted = false, fallback = false, canvas = document.createElement("canvas");
  _$jscoverage['assets/js/holder.js'][19]++;
  (document.getElementsByClassName || (document.getElementsByClassName = (function (e) {
  _$jscoverage['assets/js/holder.js'][19]++;
  var t = document, n, r, i, s = [];
  _$jscoverage['assets/js/holder.js'][19]++;
  if (t.querySelectorAll) {
    _$jscoverage['assets/js/holder.js'][19]++;
    return t.querySelectorAll(("." + e));
  }
  _$jscoverage['assets/js/holder.js'][19]++;
  if (t.evaluate) {
    _$jscoverage['assets/js/holder.js'][19]++;
    ((r = (".//*[contains(concat(' ', @class, ' '), ' " + e + " ')]")), (n = t.evaluate(r, t, null, 0, null)));
    _$jscoverage['assets/js/holder.js'][19]++;
    while ((i = n.iterateNext())) {
      _$jscoverage['assets/js/holder.js'][19]++;
      s.push(i);
}
  }
  else {
    _$jscoverage['assets/js/holder.js'][19]++;
    ((n = t.getElementsByTagName("*")), (r = new RegExp(("(^|\\s)" + e + "(\\s|$)"))));
    _$jscoverage['assets/js/holder.js'][19]++;
    for (i = 0; (i < n.length); (i++)) {
      _$jscoverage['assets/js/holder.js'][19]++;
      (r.test(n[i].className) && s.push(n[i]));
}
  }
  _$jscoverage['assets/js/holder.js'][19]++;
  return s;
})));
  _$jscoverage['assets/js/holder.js'][22]++;
  (window.getComputedStyle || (window.getComputedStyle = (function (e, t) {
  _$jscoverage['assets/js/holder.js'][22]++;
  return ((this.el = e), (this.getPropertyValue = (function (t) {
  _$jscoverage['assets/js/holder.js'][22]++;
  var n = /(\-([a-z]){1})/g;
  _$jscoverage['assets/js/holder.js'][22]++;
  return (((t == "float") && (t = "styleFloat")), (n.test(t) && (t = t.replace(n, (function () {
  _$jscoverage['assets/js/holder.js'][22]++;
  return arguments[2].toUpperCase();
})))), (e.currentStyle[t]? e.currentStyle[t]: null));
})), this);
})));
  _$jscoverage['assets/js/holder.js'][25]++;
  function contentLoaded(n, t) {
    _$jscoverage['assets/js/holder.js'][25]++;
    var l = "complete", s = "readystatechange", u = false, h = u, c = true, i = n.document, a = i.documentElement, e = (i.addEventListener? "addEventListener": "attachEvent"), v = (i.addEventListener? "removeEventListener": "detachEvent"), f = (i.addEventListener? "": "on"), r = (function (e) {
  _$jscoverage['assets/js/holder.js'][25]++;
  (((e.type != s) || (i.readyState == l)) && ((((e.type == "load")? n: i)[v])((f + e.type), r, u), ((! h) && (h = true) && t.call(n, null))));
}), o = (function () {
  _$jscoverage['assets/js/holder.js'][25]++;
  try {
    _$jscoverage['assets/js/holder.js'][25]++;
    a.doScroll("left");
  }
  catch (n) {
    _$jscoverage['assets/js/holder.js'][25]++;
    setTimeout(o, 50);
    _$jscoverage['assets/js/holder.js'][25]++;
    return;
  }
  _$jscoverage['assets/js/holder.js'][25]++;
  r("poll");
});
    _$jscoverage['assets/js/holder.js'][25]++;
    if ((i.readyState == l)) {
      _$jscoverage['assets/js/holder.js'][25]++;
      t.call(n, "lazy");
    }
    else {
      _$jscoverage['assets/js/holder.js'][25]++;
      if ((i.createEventObject && a.doScroll)) {
        _$jscoverage['assets/js/holder.js'][25]++;
        try {
          _$jscoverage['assets/js/holder.js'][25]++;
          c = (! n.frameElement);
        }
        catch (y) {
        }
        _$jscoverage['assets/js/holder.js'][25]++;
        (c && o());
      }
      _$jscoverage['assets/js/holder.js'][25]++;
      ((i[e])((f + "DOMContentLoaded"), r, u), (i[e])((f + s), r, u), (n[e])((f + "load"), r, u));
    }
}
  _$jscoverage['assets/js/holder.js'][25]++;
  ;
  _$jscoverage['assets/js/holder.js'][28]++;
  function selector(a) {
    _$jscoverage['assets/js/holder.js'][29]++;
    a = a.match(/^(\W)?(.*)/);
    _$jscoverage['assets/js/holder.js'][29]++;
    var b = (document[("getElement" + (a[1]? ((a[1] == "#")? "ById": "sByClassName"): "sByTagName"))])(a[2]);
    _$jscoverage['assets/js/holder.js'][30]++;
    var ret = [];
    _$jscoverage['assets/js/holder.js'][30]++;
    ((b != null) && (b.length? (ret = b): ((b.length == 0)? (ret = b): (ret = [b]))));
    _$jscoverage['assets/js/holder.js'][30]++;
    return ret;
}
  _$jscoverage['assets/js/holder.js'][34]++;
  function extend(a, b) {
    _$jscoverage['assets/js/holder.js'][34]++;
    var c = {};
    _$jscoverage['assets/js/holder.js'][34]++;
    for (var d in a) {
      _$jscoverage['assets/js/holder.js'][34]++;
      c[d] = a[d];
}
    _$jscoverage['assets/js/holder.js'][34]++;
    for (var e in b) {
      _$jscoverage['assets/js/holder.js'][34]++;
      c[e] = b[e];
}
    _$jscoverage['assets/js/holder.js'][34]++;
    return c;
}
  _$jscoverage['assets/js/holder.js'][37]++;
  if ((! Object.prototype.hasOwnProperty)) {
    _$jscoverage['assets/js/holder.js'][38]++;
    Object.prototype.hasOwnProperty = (function (prop) {
  _$jscoverage['assets/js/holder.js'][39]++;
  var proto = (this.__proto__ || this.constructor.prototype);
  _$jscoverage['assets/js/holder.js'][40]++;
  return ((prop in this) && ((! (prop in proto)) || (proto[prop] !== this[prop])));
});
  }
  _$jscoverage['assets/js/holder.js'][43]++;
  function text_size(width, height, template) {
    _$jscoverage['assets/js/holder.js'][44]++;
    height = parseInt(height, 10);
    _$jscoverage['assets/js/holder.js'][45]++;
    width = parseInt(width, 10);
    _$jscoverage['assets/js/holder.js'][46]++;
    var bigSide = Math.max(height, width);
    _$jscoverage['assets/js/holder.js'][47]++;
    var smallSide = Math.min(height, width);
    _$jscoverage['assets/js/holder.js'][48]++;
    var scale = 0.083333333333333329;
    _$jscoverage['assets/js/holder.js'][49]++;
    var newHeight = Math.min((smallSide * 0.75), (0.75 * bigSide * scale));
    _$jscoverage['assets/js/holder.js'][50]++;
    return ({height: Math.round(Math.max(template.size, newHeight))});
}
  _$jscoverage['assets/js/holder.js'][55]++;
  function draw(ctx, dimensions, template, ratio) {
    _$jscoverage['assets/js/holder.js'][56]++;
    var ts = text_size(dimensions.width, dimensions.height, template);
    _$jscoverage['assets/js/holder.js'][57]++;
    var text_height = ts.height;
    _$jscoverage['assets/js/holder.js'][58]++;
    var width = (dimensions.width * ratio), height = (dimensions.height * ratio);
    _$jscoverage['assets/js/holder.js'][60]++;
    var font = (template.font? template.font: "sans-serif");
    _$jscoverage['assets/js/holder.js'][61]++;
    canvas.width = width;
    _$jscoverage['assets/js/holder.js'][62]++;
    canvas.height = height;
    _$jscoverage['assets/js/holder.js'][63]++;
    ctx.textAlign = "center";
    _$jscoverage['assets/js/holder.js'][64]++;
    ctx.textBaseline = "middle";
    _$jscoverage['assets/js/holder.js'][65]++;
    ctx.fillStyle = template.background;
    _$jscoverage['assets/js/holder.js'][66]++;
    ctx.fillRect(0, 0, width, height);
    _$jscoverage['assets/js/holder.js'][67]++;
    ctx.fillStyle = template.foreground;
    _$jscoverage['assets/js/holder.js'][68]++;
    ctx.font = ("bold " + text_height + "px " + font);
    _$jscoverage['assets/js/holder.js'][69]++;
    var text = (template.text? template.text: (Math.floor(dimensions.width) + "x" + Math.floor(dimensions.height)));
    _$jscoverage['assets/js/holder.js'][70]++;
    var text_width = ctx.measureText(text).width;
    _$jscoverage['assets/js/holder.js'][71]++;
    if (((text_width / width) >= 0.75)) {
      _$jscoverage['assets/js/holder.js'][72]++;
      text_height = Math.floor((text_height * 0.75 * (width / text_width)));
    }
    _$jscoverage['assets/js/holder.js'][75]++;
    ctx.font = ("bold " + (text_height * ratio) + "px " + font);
    _$jscoverage['assets/js/holder.js'][76]++;
    ctx.fillText(text, (width / 2), (height / 2), width);
    _$jscoverage['assets/js/holder.js'][77]++;
    return canvas.toDataURL("image/png");
}
  _$jscoverage['assets/js/holder.js'][80]++;
  function render(mode, el, holder, src) {
    _$jscoverage['assets/js/holder.js'][81]++;
    var dimensions = holder.dimensions, theme = holder.theme, text = (holder.text? decodeURIComponent(holder.text): holder.text);
    _$jscoverage['assets/js/holder.js'][84]++;
    var dimensions_caption = (dimensions.width + "x" + dimensions.height);
    _$jscoverage['assets/js/holder.js'][85]++;
    theme = (text? extend(theme, {text: text}): theme);
    _$jscoverage['assets/js/holder.js'][88]++;
    theme = (holder.font? extend(theme, {font: holder.font}): theme);
    _$jscoverage['assets/js/holder.js'][91]++;
    if ((mode == "image")) {
      _$jscoverage['assets/js/holder.js'][92]++;
      el.setAttribute("data-src", src);
      _$jscoverage['assets/js/holder.js'][93]++;
      el.setAttribute("alt", (text? text: (theme.text? (theme.text + " [" + dimensions_caption + "]"): dimensions_caption)));
      _$jscoverage['assets/js/holder.js'][94]++;
      if ((fallback || (! holder.auto))) {
        _$jscoverage['assets/js/holder.js'][95]++;
        el.style.width = (dimensions.width + "px");
        _$jscoverage['assets/js/holder.js'][96]++;
        el.style.height = (dimensions.height + "px");
      }
      _$jscoverage['assets/js/holder.js'][98]++;
      if (fallback) {
        _$jscoverage['assets/js/holder.js'][99]++;
        el.style.backgroundColor = theme.background;
      }
      else {
        _$jscoverage['assets/js/holder.js'][101]++;
        el.setAttribute("src", draw(ctx, dimensions, theme, ratio));
      }
    }
    else {
      _$jscoverage['assets/js/holder.js'][103]++;
      if ((mode == "background")) {
        _$jscoverage['assets/js/holder.js'][104]++;
        if ((! fallback)) {
          _$jscoverage['assets/js/holder.js'][105]++;
          el.style.backgroundImage = ("url(" + draw(ctx, dimensions, theme, ratio) + ")");
          _$jscoverage['assets/js/holder.js'][106]++;
          el.style.backgroundSize = (dimensions.width + "px " + dimensions.height + "px");
        }
      }
      else {
        _$jscoverage['assets/js/holder.js'][108]++;
        if ((mode == "fluid")) {
          _$jscoverage['assets/js/holder.js'][109]++;
          el.setAttribute("data-src", src);
          _$jscoverage['assets/js/holder.js'][110]++;
          el.setAttribute("alt", (text? text: (theme.text? (theme.text + " [" + dimensions_caption + "]"): dimensions_caption)));
          _$jscoverage['assets/js/holder.js'][111]++;
          if ((dimensions.height.substr(-1) == "%")) {
            _$jscoverage['assets/js/holder.js'][112]++;
            el.style.height = dimensions.height;
          }
          else {
            _$jscoverage['assets/js/holder.js'][114]++;
            el.style.height = (dimensions.height + "px");
          }
          _$jscoverage['assets/js/holder.js'][116]++;
          if ((dimensions.width.substr(-1) == "%")) {
            _$jscoverage['assets/js/holder.js'][117]++;
            el.style.width = dimensions.width;
          }
          else {
            _$jscoverage['assets/js/holder.js'][119]++;
            el.style.width = (dimensions.width + "px");
          }
          _$jscoverage['assets/js/holder.js'][121]++;
          if (((el.style.display == "inline") || (el.style.display == ""))) {
            _$jscoverage['assets/js/holder.js'][122]++;
            el.style.display = "block";
          }
          _$jscoverage['assets/js/holder.js'][124]++;
          if (fallback) {
            _$jscoverage['assets/js/holder.js'][125]++;
            el.style.backgroundColor = theme.background;
          }
          else {
            _$jscoverage['assets/js/holder.js'][127]++;
            el.holderData = holder;
            _$jscoverage['assets/js/holder.js'][128]++;
            fluid_images.push(el);
            _$jscoverage['assets/js/holder.js'][129]++;
            fluid_update(el);
          }
        }
      }
    }
}
  _$jscoverage['assets/js/holder.js'][132]++;
  ;
  _$jscoverage['assets/js/holder.js'][134]++;
  function fluid_update(element) {
    _$jscoverage['assets/js/holder.js'][135]++;
    var images;
    _$jscoverage['assets/js/holder.js'][136]++;
    if ((element.nodeType == null)) {
      _$jscoverage['assets/js/holder.js'][137]++;
      images = fluid_images;
    }
    else {
      _$jscoverage['assets/js/holder.js'][139]++;
      images = [element];
    }
    _$jscoverage['assets/js/holder.js'][141]++;
    for (i in images) {
      _$jscoverage['assets/js/holder.js'][142]++;
      var el = images[i];
      _$jscoverage['assets/js/holder.js'][143]++;
      if (el.holderData) {
        _$jscoverage['assets/js/holder.js'][144]++;
        var holder = el.holderData;
        _$jscoverage['assets/js/holder.js'][145]++;
        el.setAttribute("src", draw(ctx, {height: el.clientHeight, width: el.clientWidth}, holder.theme, ratio));
      }
}
}
  _$jscoverage['assets/js/holder.js'][153]++;
  function parse_flags(flags, options) {
    _$jscoverage['assets/js/holder.js'][155]++;
    var ret = {theme: settings.themes.gray}, render = false;
    _$jscoverage['assets/js/holder.js'][159]++;
    for (((sl = flags.length), (j = 0)); (j < sl); (j++)) {
      _$jscoverage['assets/js/holder.js'][160]++;
      var flag = flags[j];
      _$jscoverage['assets/js/holder.js'][161]++;
      if (app.flags.dimensions.match(flag)) {
        _$jscoverage['assets/js/holder.js'][162]++;
        render = true;
        _$jscoverage['assets/js/holder.js'][163]++;
        ret.dimensions = app.flags.dimensions.output(flag);
      }
      else {
        _$jscoverage['assets/js/holder.js'][164]++;
        if (app.flags.fluid.match(flag)) {
          _$jscoverage['assets/js/holder.js'][165]++;
          render = true;
          _$jscoverage['assets/js/holder.js'][166]++;
          ret.dimensions = app.flags.fluid.output(flag);
          _$jscoverage['assets/js/holder.js'][167]++;
          ret.fluid = true;
        }
        else {
          _$jscoverage['assets/js/holder.js'][168]++;
          if (app.flags.colors.match(flag)) {
            _$jscoverage['assets/js/holder.js'][169]++;
            ret.theme = app.flags.colors.output(flag);
          }
          else {
            _$jscoverage['assets/js/holder.js'][170]++;
            if (options.themes[flag]) {
              _$jscoverage['assets/js/holder.js'][172]++;
              ret.theme = options.themes[flag];
            }
            else {
              _$jscoverage['assets/js/holder.js'][173]++;
              if (app.flags.text.match(flag)) {
                _$jscoverage['assets/js/holder.js'][174]++;
                ret.text = app.flags.text.output(flag);
              }
              else {
                _$jscoverage['assets/js/holder.js'][175]++;
                if (app.flags.font.match(flag)) {
                  _$jscoverage['assets/js/holder.js'][176]++;
                  ret.font = app.flags.font.output(flag);
                }
                else {
                  _$jscoverage['assets/js/holder.js'][177]++;
                  if (app.flags.auto.match(flag)) {
                    _$jscoverage['assets/js/holder.js'][178]++;
                    ret.auto = true;
                  }
                }
              }
            }
          }
        }
      }
}
    _$jscoverage['assets/js/holder.js'][182]++;
    return (render? ret: false);
}
  _$jscoverage['assets/js/holder.js'][184]++;
  ;
  _$jscoverage['assets/js/holder.js'][188]++;
  if ((! canvas.getContext)) {
    _$jscoverage['assets/js/holder.js'][189]++;
    fallback = true;
  }
  else {
    _$jscoverage['assets/js/holder.js'][191]++;
    if ((canvas.toDataURL("image/png").indexOf("data:image/png") < 0)) {
      _$jscoverage['assets/js/holder.js'][194]++;
      fallback = true;
    }
    else {
      _$jscoverage['assets/js/holder.js'][196]++;
      var ctx = canvas.getContext("2d");
    }
  }
  _$jscoverage['assets/js/holder.js'][200]++;
  var dpr = 1, bsr = 1;
  _$jscoverage['assets/js/holder.js'][202]++;
  if ((! fallback)) {
    _$jscoverage['assets/js/holder.js'][203]++;
    ((dpr = (window.devicePixelRatio || 1)), (bsr = (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1)));
  }
  _$jscoverage['assets/js/holder.js'][207]++;
  var ratio = (dpr / bsr);
  _$jscoverage['assets/js/holder.js'][209]++;
  var fluid_images = [];
  _$jscoverage['assets/js/holder.js'][211]++;
  var settings = {domain: "holder.js", images: "img", bgnodes: ".holderjs", themes: {"gray": {background: "#eee", foreground: "#aaa", size: 12}, "social": {background: "#3a5a97", foreground: "#fff", size: 12}, "industrial": {background: "#434A52", foreground: "#C2F200", size: 12}}, stylesheet: ".holderjs-fluid {font-size:16px;font-weight:bold;text-align:center;font-family:sans-serif;margin:0}"};
  _$jscoverage['assets/js/holder.js'][236]++;
  app.flags = {dimensions: {regex: /^(\d+)x(\d+)$/, output: (function (val) {
  _$jscoverage['assets/js/holder.js'][240]++;
  var exec = this.regex.exec(val);
  _$jscoverage['assets/js/holder.js'][241]++;
  return ({width: (+ exec[1]), height: (+ exec[2])});
})}, fluid: {regex: /^([0-9%]+)x([0-9%]+)$/, output: (function (val) {
  _$jscoverage['assets/js/holder.js'][250]++;
  var exec = this.regex.exec(val);
  _$jscoverage['assets/js/holder.js'][251]++;
  return ({width: exec[1], height: exec[2]});
})}, colors: {regex: /#([0-9a-f]{3,})\:#([0-9a-f]{3,})/i, output: (function (val) {
  _$jscoverage['assets/js/holder.js'][260]++;
  var exec = this.regex.exec(val);
  _$jscoverage['assets/js/holder.js'][261]++;
  return ({size: settings.themes.gray.size, foreground: ("#" + exec[2]), background: ("#" + exec[1])});
})}, text: {regex: /text\:(.*)/, output: (function (val) {
  _$jscoverage['assets/js/holder.js'][271]++;
  return this.regex.exec(val)[1];
})}, font: {regex: /font\:(.*)/, output: (function (val) {
  _$jscoverage['assets/js/holder.js'][277]++;
  return this.regex.exec(val)[1];
})}, auto: {regex: /^auto$/}};
  _$jscoverage['assets/js/holder.js'][285]++;
  for (var flag in app.flags) {
    _$jscoverage['assets/js/holder.js'][286]++;
    if ((! app.flags.hasOwnProperty(flag))) {
      _$jscoverage['assets/js/holder.js'][286]++;
      continue;
    }
    _$jscoverage['assets/js/holder.js'][287]++;
    app.flags[flag].match = (function (val) {
  _$jscoverage['assets/js/holder.js'][288]++;
  return val.match(this.regex);
});
}
  _$jscoverage['assets/js/holder.js'][292]++;
  app.add_theme = (function (name, theme) {
  _$jscoverage['assets/js/holder.js'][293]++;
  ((name != null) && (theme != null) && (settings.themes[name] = theme));
  _$jscoverage['assets/js/holder.js'][294]++;
  return app;
});
  _$jscoverage['assets/js/holder.js'][297]++;
  app.add_image = (function (src, el) {
  _$jscoverage['assets/js/holder.js'][298]++;
  var node = selector(el);
  _$jscoverage['assets/js/holder.js'][299]++;
  if (node.length) {
    _$jscoverage['assets/js/holder.js'][300]++;
    for (var i = 0, l = node.length; (i < l); (i++)) {
      _$jscoverage['assets/js/holder.js'][301]++;
      var img = document.createElement("img");
      _$jscoverage['assets/js/holder.js'][302]++;
      img.setAttribute("data-src", src);
      _$jscoverage['assets/js/holder.js'][303]++;
      node[i].appendChild(img);
}
  }
  _$jscoverage['assets/js/holder.js'][306]++;
  return app;
});
  _$jscoverage['assets/js/holder.js'][309]++;
  app.run = (function (o) {
  _$jscoverage['assets/js/holder.js'][310]++;
  var options = extend(settings, o), images = [], imageNodes = [], bgnodes = [];
  _$jscoverage['assets/js/holder.js'][313]++;
  if (((typeof options.images) == "string")) {
    _$jscoverage['assets/js/holder.js'][314]++;
    imageNodes = selector(options.images);
  }
  else {
    _$jscoverage['assets/js/holder.js'][316]++;
    if ((window.NodeList && (options.images instanceof window.NodeList))) {
      _$jscoverage['assets/js/holder.js'][317]++;
      imageNodes = options.images;
    }
    else {
      _$jscoverage['assets/js/holder.js'][318]++;
      if ((window.Node && (options.images instanceof window.Node))) {
        _$jscoverage['assets/js/holder.js'][319]++;
        imageNodes = [options.images];
      }
    }
  }
  _$jscoverage['assets/js/holder.js'][322]++;
  if (((typeof options.bgnodes) == "string")) {
    _$jscoverage['assets/js/holder.js'][323]++;
    bgnodes = selector(options.bgnodes);
  }
  else {
    _$jscoverage['assets/js/holder.js'][324]++;
    if ((window.NodeList && (options.elements instanceof window.NodeList))) {
      _$jscoverage['assets/js/holder.js'][325]++;
      bgnodes = options.bgnodes;
    }
    else {
      _$jscoverage['assets/js/holder.js'][326]++;
      if ((window.Node && (options.bgnodes instanceof window.Node))) {
        _$jscoverage['assets/js/holder.js'][327]++;
        bgnodes = [options.bgnodes];
      }
    }
  }
  _$jscoverage['assets/js/holder.js'][330]++;
  preempted = true;
  _$jscoverage['assets/js/holder.js'][332]++;
  for (((i = 0), (l = imageNodes.length)); (i < l); (i++)) {
    _$jscoverage['assets/js/holder.js'][332]++;
    images.push(imageNodes[i]);
}
  _$jscoverage['assets/js/holder.js'][334]++;
  var holdercss = document.getElementById("holderjs-style");
  _$jscoverage['assets/js/holder.js'][335]++;
  if ((! holdercss)) {
    _$jscoverage['assets/js/holder.js'][336]++;
    holdercss = document.createElement("style");
    _$jscoverage['assets/js/holder.js'][337]++;
    holdercss.setAttribute("id", "holderjs-style");
    _$jscoverage['assets/js/holder.js'][338]++;
    holdercss.type = "text/css";
    _$jscoverage['assets/js/holder.js'][339]++;
    document.getElementsByTagName("head")[0].appendChild(holdercss);
  }
  _$jscoverage['assets/js/holder.js'][342]++;
  if ((! options.nocss)) {
    _$jscoverage['assets/js/holder.js'][343]++;
    if (holdercss.styleSheet) {
      _$jscoverage['assets/js/holder.js'][344]++;
      holdercss.styleSheet.cssText += options.stylesheet;
    }
    else {
      _$jscoverage['assets/js/holder.js'][346]++;
      holdercss.appendChild(document.createTextNode(options.stylesheet));
    }
  }
  _$jscoverage['assets/js/holder.js'][350]++;
  var cssregex = new RegExp((options.domain + "/(.*?)\"?\\)"));
  _$jscoverage['assets/js/holder.js'][352]++;
  for (var l = bgnodes.length, i = 0; (i < l); (i++)) {
    _$jscoverage['assets/js/holder.js'][353]++;
    var src = window.getComputedStyle(bgnodes[i], null).getPropertyValue("background-image");
    _$jscoverage['assets/js/holder.js'][355]++;
    var flags = src.match(cssregex);
    _$jscoverage['assets/js/holder.js'][356]++;
    var bgsrc = bgnodes[i].getAttribute("data-background-src");
    _$jscoverage['assets/js/holder.js'][358]++;
    if (flags) {
      _$jscoverage['assets/js/holder.js'][359]++;
      var holder = parse_flags(flags[1].split("/"), options);
      _$jscoverage['assets/js/holder.js'][360]++;
      if (holder) {
        _$jscoverage['assets/js/holder.js'][361]++;
        render("background", bgnodes[i], holder, src);
      }
    }
    else {
      _$jscoverage['assets/js/holder.js'][364]++;
      if ((bgsrc != null)) {
        _$jscoverage['assets/js/holder.js'][365]++;
        var holder = parse_flags(bgsrc.substr((bgsrc.lastIndexOf(options.domain) + options.domain.length + 1)).split("/"), options);
        _$jscoverage['assets/js/holder.js'][367]++;
        if (holder) {
          _$jscoverage['assets/js/holder.js'][368]++;
          render("background", bgnodes[i], holder, src);
        }
      }
    }
}
  _$jscoverage['assets/js/holder.js'][373]++;
  for (((l = images.length), (i = 0)); (i < l); (i++)) {
    _$jscoverage['assets/js/holder.js'][375]++;
    var attr_src = (attr_data_src = (src = null));
    _$jscoverage['assets/js/holder.js'][377]++;
    try {
      _$jscoverage['assets/js/holder.js'][378]++;
      attr_src = images[i].getAttribute("src");
      _$jscoverage['assets/js/holder.js'][379]++;
      attr_datasrc = images[i].getAttribute("data-src");
    }
    catch (e) {
    }
    _$jscoverage['assets/js/holder.js'][382]++;
    if (((attr_datasrc == null) && (! (! attr_src)) && (attr_src.indexOf(options.domain) >= 0))) {
      _$jscoverage['assets/js/holder.js'][383]++;
      src = attr_src;
    }
    else {
      _$jscoverage['assets/js/holder.js'][384]++;
      if (((! (! attr_datasrc)) && (attr_datasrc.indexOf(options.domain) >= 0))) {
        _$jscoverage['assets/js/holder.js'][385]++;
        src = attr_datasrc;
      }
    }
    _$jscoverage['assets/js/holder.js'][388]++;
    if (src) {
      _$jscoverage['assets/js/holder.js'][389]++;
      var holder = parse_flags(src.substr((src.lastIndexOf(options.domain) + options.domain.length + 1)).split("/"), options);
      _$jscoverage['assets/js/holder.js'][391]++;
      if (holder) {
        _$jscoverage['assets/js/holder.js'][392]++;
        if (holder.fluid) {
          _$jscoverage['assets/js/holder.js'][393]++;
          render("fluid", images[i], holder, src);
        }
        else {
          _$jscoverage['assets/js/holder.js'][395]++;
          render("image", images[i], holder, src);
        }
      }
    }
}
  _$jscoverage['assets/js/holder.js'][400]++;
  return app;
});
  _$jscoverage['assets/js/holder.js'][403]++;
  contentLoaded(win, (function () {
  _$jscoverage['assets/js/holder.js'][404]++;
  if (window.addEventListener) {
    _$jscoverage['assets/js/holder.js'][405]++;
    window.addEventListener("resize", fluid_update, false);
    _$jscoverage['assets/js/holder.js'][406]++;
    window.addEventListener("orientationchange", fluid_update, false);
  }
  else {
    _$jscoverage['assets/js/holder.js'][408]++;
    window.attachEvent("onresize", fluid_update);
  }
  _$jscoverage['assets/js/holder.js'][410]++;
  (preempted || app.run());
}));
  _$jscoverage['assets/js/holder.js'][413]++;
  if ((((typeof define) === "function") && define.amd)) {
    _$jscoverage['assets/js/holder.js'][414]++;
    define("Holder", [], (function () {
  _$jscoverage['assets/js/holder.js'][415]++;
  return app;
}));
  }
})(Holder, window);
